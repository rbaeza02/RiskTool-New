//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using Domain.Core.Entities;

namespace Domain.MainModule.Entities
{
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 4.0")]
    #if !SILVERLIGHT
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
    #endif
    public partial class SelectRiskReportRC_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    OnComplexPropertyChanging();
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string agente
        {
            get { return _agente; }
            set
            {
                if (_agente != value)
                {
                    OnComplexPropertyChanging();
                    _agente = value;
                    OnPropertyChanged("agente");
                }
            }
        }
        private string _agente;
    
        [DataMember]
        public string contacto
        {
            get { return _contacto; }
            set
            {
                if (_contacto != value)
                {
                    OnComplexPropertyChanging();
                    _contacto = value;
                    OnPropertyChanged("contacto");
                }
            }
        }
        private string _contacto;
    
        [DataMember]
        public double Comision
        {
            get { return _comision; }
            set
            {
                if (_comision != value)
                {
                    OnComplexPropertyChanging();
                    _comision = value;
                    OnPropertyChanged("Comision");
                }
            }
        }
        private double _comision;
    
        [DataMember]
        public string giro
        {
            get { return _giro; }
            set
            {
                if (_giro != value)
                {
                    OnComplexPropertyChanging();
                    _giro = value;
                    OnPropertyChanged("giro");
                }
            }
        }
        private string _giro;
    
        [DataMember]
        public string direccion
        {
            get { return _direccion; }
            set
            {
                if (_direccion != value)
                {
                    OnComplexPropertyChanging();
                    _direccion = value;
                    OnPropertyChanged("direccion");
                }
            }
        }
        private string _direccion;
    
        [DataMember]
        public string webPage
        {
            get { return _webPage; }
            set
            {
                if (_webPage != value)
                {
                    OnComplexPropertyChanging();
                    _webPage = value;
                    OnPropertyChanged("webPage");
                }
            }
        }
        private string _webPage;
    
        [DataMember]
        public string suscriptor
        {
            get { return _suscriptor; }
            set
            {
                if (_suscriptor != value)
                {
                    OnComplexPropertyChanging();
                    _suscriptor = value;
                    OnPropertyChanged("suscriptor");
                }
            }
        }
        private string _suscriptor;
    
        [DataMember]
        public string tipoOperacion
        {
            get { return _tipoOperacion; }
            set
            {
                if (_tipoOperacion != value)
                {
                    OnComplexPropertyChanging();
                    _tipoOperacion = value;
                    OnPropertyChanged("tipoOperacion");
                }
            }
        }
        private string _tipoOperacion;
    
        [DataMember]
        public Nullable<double> Participacion
        {
            get { return _participacion; }
            set
            {
                if (_participacion != value)
                {
                    OnComplexPropertyChanging();
                    _participacion = value;
                    OnPropertyChanged("Participacion");
                }
            }
        }
        private Nullable<double> _participacion;
    
        [DataMember]
        public Nullable<int> SISEcod_suc
        {
            get { return _sISEcod_suc; }
            set
            {
                if (_sISEcod_suc != value)
                {
                    OnComplexPropertyChanging();
                    _sISEcod_suc = value;
                    OnPropertyChanged("SISEcod_suc");
                }
            }
        }
        private Nullable<int> _sISEcod_suc;
    
        [DataMember]
        public System.DateTime VigenciaInicio
        {
            get { return _vigenciaInicio; }
            set
            {
                if (_vigenciaInicio != value)
                {
                    OnComplexPropertyChanging();
                    _vigenciaInicio = value;
                    OnPropertyChanged("VigenciaInicio");
                }
            }
        }
        private System.DateTime _vigenciaInicio;
    
        [DataMember]
        public System.DateTime VigenciaFin
        {
            get { return _vigenciaFin; }
            set
            {
                if (_vigenciaFin != value)
                {
                    OnComplexPropertyChanging();
                    _vigenciaFin = value;
                    OnPropertyChanged("VigenciaFin");
                }
            }
        }
        private System.DateTime _vigenciaFin;
    
        [DataMember]
        public Nullable<bool> isReferral
        {
            get { return _isReferral; }
            set
            {
                if (_isReferral != value)
                {
                    OnComplexPropertyChanging();
                    _isReferral = value;
                    OnPropertyChanged("isReferral");
                }
            }
        }
        private Nullable<bool> _isReferral;
    
        [DataMember]
        public bool isNew
        {
            get { return _isNew; }
            set
            {
                if (_isNew != value)
                {
                    OnComplexPropertyChanging();
                    _isNew = value;
                    OnPropertyChanged("isNew");
                }
            }
        }
        private bool _isNew;
    
        [DataMember]
        public string moneda
        {
            get { return _moneda; }
            set
            {
                if (_moneda != value)
                {
                    OnComplexPropertyChanging();
                    _moneda = value;
                    OnPropertyChanged("moneda");
                }
            }
        }
        private string _moneda;
    
        [DataMember]
        public Nullable<int> nroPolizaAnt
        {
            get { return _nroPolizaAnt; }
            set
            {
                if (_nroPolizaAnt != value)
                {
                    OnComplexPropertyChanging();
                    _nroPolizaAnt = value;
                    OnPropertyChanged("nroPolizaAnt");
                }
            }
        }
        private Nullable<int> _nroPolizaAnt;
    
        [DataMember]
        public Nullable<double> TipoCambio
        {
            get { return _tipoCambio; }
            set
            {
                if (_tipoCambio != value)
                {
                    OnComplexPropertyChanging();
                    _tipoCambio = value;
                    OnPropertyChanged("TipoCambio");
                }
            }
        }
        private Nullable<double> _tipoCambio;
    
        [DataMember]
        public string SIC
        {
            get { return _sIC; }
            set
            {
                if (_sIC != value)
                {
                    OnComplexPropertyChanging();
                    _sIC = value;
                    OnPropertyChanged("SIC");
                }
            }
        }
        private string _sIC;
    
        [DataMember]
        public string division
        {
            get { return _division; }
            set
            {
                if (_division != value)
                {
                    OnComplexPropertyChanging();
                    _division = value;
                    OnPropertyChanged("division");
                }
            }
        }
        private string _division;
    
        [DataMember]
        public string grupo
        {
            get { return _grupo; }
            set
            {
                if (_grupo != value)
                {
                    OnComplexPropertyChanging();
                    _grupo = value;
                    OnPropertyChanged("grupo");
                }
            }
        }
        private string _grupo;
    
        [DataMember]
        public string sicNombre
        {
            get { return _sicNombre; }
            set
            {
                if (_sicNombre != value)
                {
                    OnComplexPropertyChanging();
                    _sicNombre = value;
                    OnPropertyChanged("sicNombre");
                }
            }
        }
        private string _sicNombre;
    
        [DataMember]
        public string tri
        {
            get { return _tri; }
            set
            {
                if (_tri != value)
                {
                    OnComplexPropertyChanging();
                    _tri = value;
                    OnPropertyChanged("tri");
                }
            }
        }
        private string _tri;
    
        [DataMember]
        public string retro
        {
            get { return _retro; }
            set
            {
                if (_retro != value)
                {
                    OnComplexPropertyChanging();
                    _retro = value;
                    OnPropertyChanged("retro");
                }
            }
        }
        private string _retro;
    
        [DataMember]
        public string Premises
        {
            get { return _premises; }
            set
            {
                if (_premises != value)
                {
                    OnComplexPropertyChanging();
                    _premises = value;
                    OnPropertyChanged("Premises");
                }
            }
        }
        private string _premises;
    
        [DataMember]
        public string Products
        {
            get { return _products; }
            set
            {
                if (_products != value)
                {
                    OnComplexPropertyChanging();
                    _products = value;
                    OnPropertyChanged("Products");
                }
            }
        }
        private string _products;
    
        [DataMember]
        public Nullable<double> limite
        {
            get { return _limite; }
            set
            {
                if (_limite != value)
                {
                    OnComplexPropertyChanging();
                    _limite = value;
                    OnPropertyChanged("limite");
                }
            }
        }
        private Nullable<double> _limite;
    
        [DataMember]
        public string typeOcurrAuto
        {
            get { return _typeOcurrAuto; }
            set
            {
                if (_typeOcurrAuto != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrAuto = value;
                    OnPropertyChanged("typeOcurrAuto");
                }
            }
        }
        private string _typeOcurrAuto;
    
        [DataMember]
        public string typeOcurrConstruction
        {
            get { return _typeOcurrConstruction; }
            set
            {
                if (_typeOcurrConstruction != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrConstruction = value;
                    OnPropertyChanged("typeOcurrConstruction");
                }
            }
        }
        private string _typeOcurrConstruction;
    
        [DataMember]
        public string typeOcurrLiability
        {
            get { return _typeOcurrLiability; }
            set
            {
                if (_typeOcurrLiability != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrLiability = value;
                    OnPropertyChanged("typeOcurrLiability");
                }
            }
        }
        private string _typeOcurrLiability;
    
        [DataMember]
        public string typeOcurrPremises
        {
            get { return _typeOcurrPremises; }
            set
            {
                if (_typeOcurrPremises != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrPremises = value;
                    OnPropertyChanged("typeOcurrPremises");
                }
            }
        }
        private string _typeOcurrPremises;
    
        [DataMember]
        public string typeOcurrProducts
        {
            get { return _typeOcurrProducts; }
            set
            {
                if (_typeOcurrProducts != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrProducts = value;
                    OnPropertyChanged("typeOcurrProducts");
                }
            }
        }
        private string _typeOcurrProducts;
    
        [DataMember]
        public Nullable<decimal> pctAuto
        {
            get { return _pctAuto; }
            set
            {
                if (_pctAuto != value)
                {
                    OnComplexPropertyChanging();
                    _pctAuto = value;
                    OnPropertyChanged("pctAuto");
                }
            }
        }
        private Nullable<decimal> _pctAuto;
    
        [DataMember]
        public Nullable<decimal> pctConstruction
        {
            get { return _pctConstruction; }
            set
            {
                if (_pctConstruction != value)
                {
                    OnComplexPropertyChanging();
                    _pctConstruction = value;
                    OnPropertyChanged("pctConstruction");
                }
            }
        }
        private Nullable<decimal> _pctConstruction;
    
        [DataMember]
        public Nullable<decimal> pctLiability
        {
            get { return _pctLiability; }
            set
            {
                if (_pctLiability != value)
                {
                    OnComplexPropertyChanging();
                    _pctLiability = value;
                    OnPropertyChanged("pctLiability");
                }
            }
        }
        private Nullable<decimal> _pctLiability;
    
        [DataMember]
        public Nullable<decimal> pctPremises
        {
            get { return _pctPremises; }
            set
            {
                if (_pctPremises != value)
                {
                    OnComplexPropertyChanging();
                    _pctPremises = value;
                    OnPropertyChanged("pctPremises");
                }
            }
        }
        private Nullable<decimal> _pctPremises;
    
        [DataMember]
        public Nullable<decimal> pctProducts
        {
            get { return _pctProducts; }
            set
            {
                if (_pctProducts != value)
                {
                    OnComplexPropertyChanging();
                    _pctProducts = value;
                    OnPropertyChanged("pctProducts");
                }
            }
        }
        private Nullable<decimal> _pctProducts;
    
        [DataMember]
        public string Comments1
        {
            get { return _comments1; }
            set
            {
                if (_comments1 != value)
                {
                    OnComplexPropertyChanging();
                    _comments1 = value;
                    OnPropertyChanged("Comments1");
                }
            }
        }
        private string _comments1;
    
        [DataMember]
        public string Comments2
        {
            get { return _comments2; }
            set
            {
                if (_comments2 != value)
                {
                    OnComplexPropertyChanging();
                    _comments2 = value;
                    OnPropertyChanged("Comments2");
                }
            }
        }
        private string _comments2;
    
        [DataMember]
        public string Comments3
        {
            get { return _comments3; }
            set
            {
                if (_comments3 != value)
                {
                    OnComplexPropertyChanging();
                    _comments3 = value;
                    OnPropertyChanged("Comments3");
                }
            }
        }
        private string _comments3;
    
        [DataMember]
        public string Authority
        {
            get { return _authority; }
            set
            {
                if (_authority != value)
                {
                    OnComplexPropertyChanging();
                    _authority = value;
                    OnPropertyChanged("Authority");
                }
            }
        }
        private string _authority;
    
        [DataMember]
        public int typeOcurrAutoID
        {
            get { return _typeOcurrAutoID; }
            set
            {
                if (_typeOcurrAutoID != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrAutoID = value;
                    OnPropertyChanged("typeOcurrAutoID");
                }
            }
        }
        private int _typeOcurrAutoID;
    
        [DataMember]
        public int typeOcurrConstructionID
        {
            get { return _typeOcurrConstructionID; }
            set
            {
                if (_typeOcurrConstructionID != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrConstructionID = value;
                    OnPropertyChanged("typeOcurrConstructionID");
                }
            }
        }
        private int _typeOcurrConstructionID;
    
        [DataMember]
        public int typeOcurrLiabilityID
        {
            get { return _typeOcurrLiabilityID; }
            set
            {
                if (_typeOcurrLiabilityID != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrLiabilityID = value;
                    OnPropertyChanged("typeOcurrLiabilityID");
                }
            }
        }
        private int _typeOcurrLiabilityID;
    
        [DataMember]
        public int typeOcurrPremisesID
        {
            get { return _typeOcurrPremisesID; }
            set
            {
                if (_typeOcurrPremisesID != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrPremisesID = value;
                    OnPropertyChanged("typeOcurrPremisesID");
                }
            }
        }
        private int _typeOcurrPremisesID;
    
        [DataMember]
        public int typeOcurrProductsID
        {
            get { return _typeOcurrProductsID; }
            set
            {
                if (_typeOcurrProductsID != value)
                {
                    OnComplexPropertyChanging();
                    _typeOcurrProductsID = value;
                    OnPropertyChanged("typeOcurrProductsID");
                }
            }
        }
        private int _typeOcurrProductsID;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, SelectRiskReportRC_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nombre", parentPropertyName), complexObject == null ? null : (object)complexObject.nombre);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.agente", parentPropertyName), complexObject == null ? null : (object)complexObject.agente);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.contacto", parentPropertyName), complexObject == null ? null : (object)complexObject.contacto);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Comision", parentPropertyName), complexObject == null ? null : (object)complexObject.Comision);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.giro", parentPropertyName), complexObject == null ? null : (object)complexObject.giro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.direccion", parentPropertyName), complexObject == null ? null : (object)complexObject.direccion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.webPage", parentPropertyName), complexObject == null ? null : (object)complexObject.webPage);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.suscriptor", parentPropertyName), complexObject == null ? null : (object)complexObject.suscriptor);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tipoOperacion", parentPropertyName), complexObject == null ? null : (object)complexObject.tipoOperacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Participacion", parentPropertyName), complexObject == null ? null : (object)complexObject.Participacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.SISEcod_suc", parentPropertyName), complexObject == null ? null : (object)complexObject.SISEcod_suc);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.VigenciaInicio", parentPropertyName), complexObject == null ? null : (object)complexObject.VigenciaInicio);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.VigenciaFin", parentPropertyName), complexObject == null ? null : (object)complexObject.VigenciaFin);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.isReferral", parentPropertyName), complexObject == null ? null : (object)complexObject.isReferral);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.isNew", parentPropertyName), complexObject == null ? null : (object)complexObject.isNew);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.moneda", parentPropertyName), complexObject == null ? null : (object)complexObject.moneda);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nroPolizaAnt", parentPropertyName), complexObject == null ? null : (object)complexObject.nroPolizaAnt);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TipoCambio", parentPropertyName), complexObject == null ? null : (object)complexObject.TipoCambio);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.SIC", parentPropertyName), complexObject == null ? null : (object)complexObject.SIC);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.division", parentPropertyName), complexObject == null ? null : (object)complexObject.division);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.grupo", parentPropertyName), complexObject == null ? null : (object)complexObject.grupo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.sicNombre", parentPropertyName), complexObject == null ? null : (object)complexObject.sicNombre);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tri", parentPropertyName), complexObject == null ? null : (object)complexObject.tri);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.retro", parentPropertyName), complexObject == null ? null : (object)complexObject.retro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Premises", parentPropertyName), complexObject == null ? null : (object)complexObject.Premises);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Products", parentPropertyName), complexObject == null ? null : (object)complexObject.Products);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.limite", parentPropertyName), complexObject == null ? null : (object)complexObject.limite);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrAuto", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrAuto);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrConstruction", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrConstruction);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrLiability", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrLiability);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrPremises", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrPremises);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrProducts", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrProducts);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.pctAuto", parentPropertyName), complexObject == null ? null : (object)complexObject.pctAuto);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.pctConstruction", parentPropertyName), complexObject == null ? null : (object)complexObject.pctConstruction);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.pctLiability", parentPropertyName), complexObject == null ? null : (object)complexObject.pctLiability);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.pctPremises", parentPropertyName), complexObject == null ? null : (object)complexObject.pctPremises);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.pctProducts", parentPropertyName), complexObject == null ? null : (object)complexObject.pctProducts);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Comments1", parentPropertyName), complexObject == null ? null : (object)complexObject.Comments1);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Comments2", parentPropertyName), complexObject == null ? null : (object)complexObject.Comments2);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Comments3", parentPropertyName), complexObject == null ? null : (object)complexObject.Comments3);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Authority", parentPropertyName), complexObject == null ? null : (object)complexObject.Authority);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrAutoID", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrAutoID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrConstructionID", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrConstructionID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrLiabilityID", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrLiabilityID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrPremisesID", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrPremisesID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.typeOcurrProductsID", parentPropertyName), complexObject == null ? null : (object)complexObject.typeOcurrProductsID);
        }

        #endregion

    }
}
