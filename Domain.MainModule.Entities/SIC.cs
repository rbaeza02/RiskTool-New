//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using Domain.Core.Entities;

namespace Domain.MainModule.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SICGrupo))]
    [KnownType(typeof(TipoConstructivoIncendio))]
    [KnownType(typeof(GrupoIncendio))]
    [KnownType(typeof(SICClassMap))]
    [KnownType(typeof(GradoExposicion))]
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 4.0")]
    #if !SILVERLIGHT
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
    #endif
    public partial class SIC: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int SICid
        {
            get { return _sICid; }
            set
            {
                if (_sICid != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'SICid' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _sICid = value;
                    OnPropertyChanged("SICid");
                }
            }
        }
        private int _sICid;
    
        [DataMember]
        public Nullable<int> SICGrupoID
        {
            get { return _sICGrupoID; }
            set
            {
                if (_sICGrupoID != value)
                {
                    ChangeTracker.RecordOriginalValue("SICGrupoID", _sICGrupoID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_SICGrupo != null && bk_tc_SICGrupo.SICGrupoID != value)
                        {
                            bk_tc_SICGrupo = null;
                        }
                    }
                    _sICGrupoID = value;
                    OnPropertyChanged("SICGrupoID");
                }
            }
        }
        private Nullable<int> _sICGrupoID;
    
        [DataMember]
        public string SISECod_giro_negocio
        {
            get { return _sISECod_giro_negocio; }
            set
            {
                if (_sISECod_giro_negocio != value)
                {
                    _sISECod_giro_negocio = value;
                    OnPropertyChanged("SISECod_giro_negocio");
                }
            }
        }
        private string _sISECod_giro_negocio;
    
        [DataMember]
        public string NombreESP
        {
            get { return _nombreESP; }
            set
            {
                if (_nombreESP != value)
                {
                    _nombreESP = value;
                    OnPropertyChanged("NombreESP");
                }
            }
        }
        private string _nombreESP;
    
        [DataMember]
        public string NombreING
        {
            get { return _nombreING; }
            set
            {
                if (_nombreING != value)
                {
                    _nombreING = value;
                    OnPropertyChanged("NombreING");
                }
            }
        }
        private string _nombreING;
    
        [DataMember]
        public Nullable<int> TipoConstructivoIncendioIDDefault
        {
            get { return _tipoConstructivoIncendioIDDefault; }
            set
            {
                if (_tipoConstructivoIncendioIDDefault != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoConstructivoIncendioIDDefault", _tipoConstructivoIncendioIDDefault);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_TipoConstructivoIncendio != null && bk_tc_TipoConstructivoIncendio.TipoConstructivoIncendioID != value)
                        {
                            bk_tc_TipoConstructivoIncendio = null;
                        }
                    }
                    _tipoConstructivoIncendioIDDefault = value;
                    OnPropertyChanged("TipoConstructivoIncendioIDDefault");
                }
            }
        }
        private Nullable<int> _tipoConstructivoIncendioIDDefault;
    
        [DataMember]
        public Nullable<int> GrupoIncendioIDDefault
        {
            get { return _grupoIncendioIDDefault; }
            set
            {
                if (_grupoIncendioIDDefault != value)
                {
                    ChangeTracker.RecordOriginalValue("GrupoIncendioIDDefault", _grupoIncendioIDDefault);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_GrupoIncendio != null && bk_tc_GrupoIncendio.GrupoIncendioID != value)
                        {
                            bk_tc_GrupoIncendio = null;
                        }
                    }
                    _grupoIncendioIDDefault = value;
                    OnPropertyChanged("GrupoIncendioIDDefault");
                }
            }
        }
        private Nullable<int> _grupoIncendioIDDefault;
    
        [DataMember]
        public Nullable<int> RoboGiroID
        {
            get { return _roboGiroID; }
            set
            {
                if (_roboGiroID != value)
                {
                    _roboGiroID = value;
                    OnPropertyChanged("RoboGiroID");
                }
            }
        }
        private Nullable<int> _roboGiroID;
    
        [DataMember]
        public Nullable<int> DinValGiroID
        {
            get { return _dinValGiroID; }
            set
            {
                if (_dinValGiroID != value)
                {
                    _dinValGiroID = value;
                    OnPropertyChanged("DinValGiroID");
                }
            }
        }
        private Nullable<int> _dinValGiroID;
    
        [DataMember]
        public Nullable<int> RotMaqGiroID
        {
            get { return _rotMaqGiroID; }
            set
            {
                if (_rotMaqGiroID != value)
                {
                    _rotMaqGiroID = value;
                    OnPropertyChanged("RotMaqGiroID");
                }
            }
        }
        private Nullable<int> _rotMaqGiroID;
    
        [DataMember]
        public Nullable<int> EqElecGiroID
        {
            get { return _eqElecGiroID; }
            set
            {
                if (_eqElecGiroID != value)
                {
                    _eqElecGiroID = value;
                    OnPropertyChanged("EqElecGiroID");
                }
            }
        }
        private Nullable<int> _eqElecGiroID;
    
        [DataMember]
        public Nullable<int> EqElecMovilTipoID
        {
            get { return _eqElecMovilTipoID; }
            set
            {
                if (_eqElecMovilTipoID != value)
                {
                    _eqElecMovilTipoID = value;
                    OnPropertyChanged("EqElecMovilTipoID");
                }
            }
        }
        private Nullable<int> _eqElecMovilTipoID;
    
        [DataMember]
        public Nullable<int> RCActInmGrupoIncendioID
        {
            get { return _rCActInmGrupoIncendioID; }
            set
            {
                if (_rCActInmGrupoIncendioID != value)
                {
                    ChangeTracker.RecordOriginalValue("RCActInmGrupoIncendioID", _rCActInmGrupoIncendioID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_GrupoIncendio1 != null && bk_tc_GrupoIncendio1.GrupoIncendioID != value)
                        {
                            bk_tc_GrupoIncendio1 = null;
                        }
                    }
                    _rCActInmGrupoIncendioID = value;
                    OnPropertyChanged("RCActInmGrupoIncendioID");
                }
            }
        }
        private Nullable<int> _rCActInmGrupoIncendioID;
    
        [DataMember]
        public Nullable<int> RCActInmTipoRiesgoID
        {
            get { return _rCActInmTipoRiesgoID; }
            set
            {
                if (_rCActInmTipoRiesgoID != value)
                {
                    _rCActInmTipoRiesgoID = value;
                    OnPropertyChanged("RCActInmTipoRiesgoID");
                }
            }
        }
        private Nullable<int> _rCActInmTipoRiesgoID;
    
        [DataMember]
        public Nullable<int> GradoIDMachinery
        {
            get { return _gradoIDMachinery; }
            set
            {
                if (_gradoIDMachinery != value)
                {
                    _gradoIDMachinery = value;
                    OnPropertyChanged("GradoIDMachinery");
                }
            }
        }
        private Nullable<int> _gradoIDMachinery;
    
        [DataMember]
        public Nullable<int> NivelIDProductCompleted
        {
            get { return _nivelIDProductCompleted; }
            set
            {
                if (_nivelIDProductCompleted != value)
                {
                    _nivelIDProductCompleted = value;
                    OnPropertyChanged("NivelIDProductCompleted");
                }
            }
        }
        private Nullable<int> _nivelIDProductCompleted;
    
        [DataMember]
        public Nullable<int> NivelIDFirePerils
        {
            get { return _nivelIDFirePerils; }
            set
            {
                if (_nivelIDFirePerils != value)
                {
                    _nivelIDFirePerils = value;
                    OnPropertyChanged("NivelIDFirePerils");
                }
            }
        }
        private Nullable<int> _nivelIDFirePerils;
    
        [DataMember]
        public Nullable<int> NivelIDLiability
        {
            get { return _nivelIDLiability; }
            set
            {
                if (_nivelIDLiability != value)
                {
                    _nivelIDLiability = value;
                    OnPropertyChanged("NivelIDLiability");
                }
            }
        }
        private Nullable<int> _nivelIDLiability;
    
        [DataMember]
        public Nullable<int> GradoExposicionIDDefault
        {
            get { return _gradoExposicionIDDefault; }
            set
            {
                if (_gradoExposicionIDDefault != value)
                {
                    ChangeTracker.RecordOriginalValue("GradoExposicionIDDefault", _gradoExposicionIDDefault);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_GradoExposicion != null && bk_tc_GradoExposicion.GradoExposicionID != value)
                        {
                            bk_tc_GradoExposicion = null;
                        }
                    }
                    _gradoExposicionIDDefault = value;
                    OnPropertyChanged("GradoExposicionIDDefault");
                }
            }
        }
        private Nullable<int> _gradoExposicionIDDefault;
    
        [DataMember]
        public string SISEcod_cnsf_negocio
        {
            get { return _sISEcod_cnsf_negocio; }
            set
            {
                if (_sISEcod_cnsf_negocio != value)
                {
                    _sISEcod_cnsf_negocio = value;
                    OnPropertyChanged("SISEcod_cnsf_negocio");
                }
            }
        }
        private string _sISEcod_cnsf_negocio;
    
        [DataMember]
        public Nullable<int> SISEcod_hazard_grade
        {
            get { return _sISEcod_hazard_grade; }
            set
            {
                if (_sISEcod_hazard_grade != value)
                {
                    _sISEcod_hazard_grade = value;
                    OnPropertyChanged("SISEcod_hazard_grade");
                }
            }
        }
        private Nullable<int> _sISEcod_hazard_grade;
    
        [DataMember]
        public string DescripcionCNSF_AMIS
        {
            get { return _descripcionCNSF_AMIS; }
            set
            {
                if (_descripcionCNSF_AMIS != value)
                {
                    _descripcionCNSF_AMIS = value;
                    OnPropertyChanged("DescripcionCNSF_AMIS");
                }
            }
        }
        private string _descripcionCNSF_AMIS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public SICGrupo bk_tc_SICGrupo
        {
            get { return _bk_tc_SICGrupo; }
            set
            {
                if (!ReferenceEquals(_bk_tc_SICGrupo, value))
                {
                    var previousValue = _bk_tc_SICGrupo;
                    _bk_tc_SICGrupo = value;
                    Fixupbk_tc_SICGrupo(previousValue);
                    OnNavigationPropertyChanged("bk_tc_SICGrupo");
                }
            }
        }
        private SICGrupo _bk_tc_SICGrupo;
    
        [DataMember]
        public TipoConstructivoIncendio bk_tc_TipoConstructivoIncendio
        {
            get { return _bk_tc_TipoConstructivoIncendio; }
            set
            {
                if (!ReferenceEquals(_bk_tc_TipoConstructivoIncendio, value))
                {
                    var previousValue = _bk_tc_TipoConstructivoIncendio;
                    _bk_tc_TipoConstructivoIncendio = value;
                    Fixupbk_tc_TipoConstructivoIncendio(previousValue);
                    OnNavigationPropertyChanged("bk_tc_TipoConstructivoIncendio");
                }
            }
        }
        private TipoConstructivoIncendio _bk_tc_TipoConstructivoIncendio;
    
        [DataMember]
        public GrupoIncendio bk_tc_GrupoIncendio
        {
            get { return _bk_tc_GrupoIncendio; }
            set
            {
                if (!ReferenceEquals(_bk_tc_GrupoIncendio, value))
                {
                    var previousValue = _bk_tc_GrupoIncendio;
                    _bk_tc_GrupoIncendio = value;
                    Fixupbk_tc_GrupoIncendio(previousValue);
                    OnNavigationPropertyChanged("bk_tc_GrupoIncendio");
                }
            }
        }
        private GrupoIncendio _bk_tc_GrupoIncendio;
    
        [DataMember]
        public GrupoIncendio bk_tc_GrupoIncendio1
        {
            get { return _bk_tc_GrupoIncendio1; }
            set
            {
                if (!ReferenceEquals(_bk_tc_GrupoIncendio1, value))
                {
                    var previousValue = _bk_tc_GrupoIncendio1;
                    _bk_tc_GrupoIncendio1 = value;
                    Fixupbk_tc_GrupoIncendio1(previousValue);
                    OnNavigationPropertyChanged("bk_tc_GrupoIncendio1");
                }
            }
        }
        private GrupoIncendio _bk_tc_GrupoIncendio1;
    
        [DataMember]
        public TrackableCollection<SICClassMap> bk_tc_SICClassMap
        {
            get
            {
                if (_bk_tc_SICClassMap == null)
                {
                    _bk_tc_SICClassMap = new TrackableCollection<SICClassMap>();
                    _bk_tc_SICClassMap.CollectionChanged += Fixupbk_tc_SICClassMap;
                }
                return _bk_tc_SICClassMap;
            }
            set
            {
                if (!ReferenceEquals(_bk_tc_SICClassMap, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bk_tc_SICClassMap != null)
                    {
                        _bk_tc_SICClassMap.CollectionChanged -= Fixupbk_tc_SICClassMap;
                    }
                    _bk_tc_SICClassMap = value;
                    if (_bk_tc_SICClassMap != null)
                    {
                        _bk_tc_SICClassMap.CollectionChanged += Fixupbk_tc_SICClassMap;
                    }
                    OnNavigationPropertyChanged("bk_tc_SICClassMap");
                }
            }
        }
        private TrackableCollection<SICClassMap> _bk_tc_SICClassMap;
    
        [DataMember]
        public GradoExposicion bk_tc_GradoExposicion
        {
            get { return _bk_tc_GradoExposicion; }
            set
            {
                if (!ReferenceEquals(_bk_tc_GradoExposicion, value))
                {
                    var previousValue = _bk_tc_GradoExposicion;
                    _bk_tc_GradoExposicion = value;
                    Fixupbk_tc_GradoExposicion(previousValue);
                    OnNavigationPropertyChanged("bk_tc_GradoExposicion");
                }
            }
        }
        private GradoExposicion _bk_tc_GradoExposicion;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            bk_tc_SICGrupo = null;
            bk_tc_TipoConstructivoIncendio = null;
            bk_tc_GrupoIncendio = null;
            bk_tc_GrupoIncendio1 = null;
            bk_tc_SICClassMap.Clear();
            bk_tc_GradoExposicion = null;
        }

        #endregion

        #region Association Fixup
    
        private void Fixupbk_tc_SICGrupo(SICGrupo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_SIC.Contains(this))
            {
                previousValue.bk_tc_SIC.Remove(this);
            }
    
            if (bk_tc_SICGrupo != null)
            {
                if (!bk_tc_SICGrupo.bk_tc_SIC.Contains(this))
                {
                    bk_tc_SICGrupo.bk_tc_SIC.Add(this);
                }
    
                SICGrupoID = bk_tc_SICGrupo.SICGrupoID;
            }
            else if (!skipKeys)
            {
                SICGrupoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_SICGrupo")
                    && (ChangeTracker.OriginalValues["bk_tc_SICGrupo"] == bk_tc_SICGrupo))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_SICGrupo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_SICGrupo", previousValue);
                }
                if (bk_tc_SICGrupo != null && !bk_tc_SICGrupo.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_SICGrupo.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_TipoConstructivoIncendio(TipoConstructivoIncendio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_SIC.Contains(this))
            {
                previousValue.bk_tc_SIC.Remove(this);
            }
    
            if (bk_tc_TipoConstructivoIncendio != null)
            {
                if (!bk_tc_TipoConstructivoIncendio.bk_tc_SIC.Contains(this))
                {
                    bk_tc_TipoConstructivoIncendio.bk_tc_SIC.Add(this);
                }
    
                TipoConstructivoIncendioIDDefault = bk_tc_TipoConstructivoIncendio.TipoConstructivoIncendioID;
            }
            else if (!skipKeys)
            {
                TipoConstructivoIncendioIDDefault = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_TipoConstructivoIncendio")
                    && (ChangeTracker.OriginalValues["bk_tc_TipoConstructivoIncendio"] == bk_tc_TipoConstructivoIncendio))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_TipoConstructivoIncendio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_TipoConstructivoIncendio", previousValue);
                }
                if (bk_tc_TipoConstructivoIncendio != null && !bk_tc_TipoConstructivoIncendio.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_TipoConstructivoIncendio.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_GrupoIncendio(GrupoIncendio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_SIC.Contains(this))
            {
                previousValue.bk_tc_SIC.Remove(this);
            }
    
            if (bk_tc_GrupoIncendio != null)
            {
                if (!bk_tc_GrupoIncendio.bk_tc_SIC.Contains(this))
                {
                    bk_tc_GrupoIncendio.bk_tc_SIC.Add(this);
                }
    
                GrupoIncendioIDDefault = bk_tc_GrupoIncendio.GrupoIncendioID;
            }
            else if (!skipKeys)
            {
                GrupoIncendioIDDefault = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_GrupoIncendio")
                    && (ChangeTracker.OriginalValues["bk_tc_GrupoIncendio"] == bk_tc_GrupoIncendio))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_GrupoIncendio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_GrupoIncendio", previousValue);
                }
                if (bk_tc_GrupoIncendio != null && !bk_tc_GrupoIncendio.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_GrupoIncendio.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_GrupoIncendio1(GrupoIncendio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_SIC1.Contains(this))
            {
                previousValue.bk_tc_SIC1.Remove(this);
            }
    
            if (bk_tc_GrupoIncendio1 != null)
            {
                if (!bk_tc_GrupoIncendio1.bk_tc_SIC1.Contains(this))
                {
                    bk_tc_GrupoIncendio1.bk_tc_SIC1.Add(this);
                }
    
                RCActInmGrupoIncendioID = bk_tc_GrupoIncendio1.GrupoIncendioID;
            }
            else if (!skipKeys)
            {
                RCActInmGrupoIncendioID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_GrupoIncendio1")
                    && (ChangeTracker.OriginalValues["bk_tc_GrupoIncendio1"] == bk_tc_GrupoIncendio1))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_GrupoIncendio1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_GrupoIncendio1", previousValue);
                }
                if (bk_tc_GrupoIncendio1 != null && !bk_tc_GrupoIncendio1.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_GrupoIncendio1.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_GradoExposicion(GradoExposicion previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_SIC.Contains(this))
            {
                previousValue.bk_tc_SIC.Remove(this);
            }
    
            if (bk_tc_GradoExposicion != null)
            {
                if (!bk_tc_GradoExposicion.bk_tc_SIC.Contains(this))
                {
                    bk_tc_GradoExposicion.bk_tc_SIC.Add(this);
                }
    
                GradoExposicionIDDefault = bk_tc_GradoExposicion.GradoExposicionID;
            }
            else if (!skipKeys)
            {
                GradoExposicionIDDefault = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_GradoExposicion")
                    && (ChangeTracker.OriginalValues["bk_tc_GradoExposicion"] == bk_tc_GradoExposicion))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_GradoExposicion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_GradoExposicion", previousValue);
                }
                if (bk_tc_GradoExposicion != null && !bk_tc_GradoExposicion.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_GradoExposicion.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_SICClassMap(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SICClassMap item in e.NewItems)
                {
                    item.bk_tc_SIC = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("bk_tc_SICClassMap", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SICClassMap item in e.OldItems)
                {
                    if (ReferenceEquals(item.bk_tc_SIC, this))
                    {
                        item.bk_tc_SIC = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("bk_tc_SICClassMap", item);
                    }
                }
            }
        }

        #endregion

    }
}
