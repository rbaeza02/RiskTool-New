//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using Domain.Core.Entities;

namespace Domain.MainModule.Entities
{
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 4.0")]
    #if !SILVERLIGHT
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
    #endif
    public partial class SISEAge_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public Nullable<int> id_pv
        {
            get { return _id_pv; }
            set
            {
                if (_id_pv != value)
                {
                    OnComplexPropertyChanging();
                    _id_pv = value;
                    OnPropertyChanged("id_pv");
                }
            }
        }
        private Nullable<int> _id_pv;
    
        [DataMember]
        public Nullable<int> cod_suc
        {
            get { return _cod_suc; }
            set
            {
                if (_cod_suc != value)
                {
                    OnComplexPropertyChanging();
                    _cod_suc = value;
                    OnPropertyChanged("cod_suc");
                }
            }
        }
        private Nullable<int> _cod_suc;
    
        [DataMember]
        public Nullable<int> cod_ramo
        {
            get { return _cod_ramo; }
            set
            {
                if (_cod_ramo != value)
                {
                    OnComplexPropertyChanging();
                    _cod_ramo = value;
                    OnPropertyChanged("cod_ramo");
                }
            }
        }
        private Nullable<int> _cod_ramo;
    
        [DataMember]
        public int cod_tipo_agente
        {
            get { return _cod_tipo_agente; }
            set
            {
                if (_cod_tipo_agente != value)
                {
                    OnComplexPropertyChanging();
                    _cod_tipo_agente = value;
                    OnPropertyChanged("cod_tipo_agente");
                }
            }
        }
        private int _cod_tipo_agente;
    
        [DataMember]
        public Nullable<int> cod_agente
        {
            get { return _cod_agente; }
            set
            {
                if (_cod_agente != value)
                {
                    OnComplexPropertyChanging();
                    _cod_agente = value;
                    OnPropertyChanged("cod_agente");
                }
            }
        }
        private Nullable<int> _cod_agente;
    
        [DataMember]
        public double Pje_comis_normal
        {
            get { return _pje_comis_normal; }
            set
            {
                if (_pje_comis_normal != value)
                {
                    OnComplexPropertyChanging();
                    _pje_comis_normal = value;
                    OnPropertyChanged("Pje_comis_normal");
                }
            }
        }
        private double _pje_comis_normal;
    
        [DataMember]
        public int Pje_comis_extra
        {
            get { return _pje_comis_extra; }
            set
            {
                if (_pje_comis_extra != value)
                {
                    OnComplexPropertyChanging();
                    _pje_comis_extra = value;
                    OnPropertyChanged("Pje_comis_extra");
                }
            }
        }
        private int _pje_comis_extra;
    
        [DataMember]
        public Nullable<double> imp_comis_normal_me
        {
            get { return _imp_comis_normal_me; }
            set
            {
                if (_imp_comis_normal_me != value)
                {
                    OnComplexPropertyChanging();
                    _imp_comis_normal_me = value;
                    OnPropertyChanged("imp_comis_normal_me");
                }
            }
        }
        private Nullable<double> _imp_comis_normal_me;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, SISEAge_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.id_pv", parentPropertyName), complexObject == null ? null : (object)complexObject.id_pv);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_suc", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_suc);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_ramo", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_ramo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_tipo_agente", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_tipo_agente);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_agente", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_agente);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Pje_comis_normal", parentPropertyName), complexObject == null ? null : (object)complexObject.Pje_comis_normal);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Pje_comis_extra", parentPropertyName), complexObject == null ? null : (object)complexObject.Pje_comis_extra);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.imp_comis_normal_me", parentPropertyName), complexObject == null ? null : (object)complexObject.imp_comis_normal_me);
        }

        #endregion

    }
}
