//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using Domain.Core.Entities;

namespace Domain.MainModule.Entities
{
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 4.0")]
    #if !SILVERLIGHT
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
    #endif
    public partial class SelectPresentacionUbicaciones_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int nroUbicacion
        {
            get { return _nroUbicacion; }
            set
            {
                if (_nroUbicacion != value)
                {
                    OnComplexPropertyChanging();
                    _nroUbicacion = value;
                    OnPropertyChanged("nroUbicacion");
                }
            }
        }
        private int _nroUbicacion;
    
        [DataMember]
        public string Domicilio_Calle
        {
            get { return _domicilio_Calle; }
            set
            {
                if (_domicilio_Calle != value)
                {
                    OnComplexPropertyChanging();
                    _domicilio_Calle = value;
                    OnPropertyChanged("Domicilio_Calle");
                }
            }
        }
        private string _domicilio_Calle;
    
        [DataMember]
        public string Domicilio_NroExterior
        {
            get { return _domicilio_NroExterior; }
            set
            {
                if (_domicilio_NroExterior != value)
                {
                    OnComplexPropertyChanging();
                    _domicilio_NroExterior = value;
                    OnPropertyChanged("Domicilio_NroExterior");
                }
            }
        }
        private string _domicilio_NroExterior;
    
        [DataMember]
        public string Domicilio_NroInterior
        {
            get { return _domicilio_NroInterior; }
            set
            {
                if (_domicilio_NroInterior != value)
                {
                    OnComplexPropertyChanging();
                    _domicilio_NroInterior = value;
                    OnPropertyChanged("Domicilio_NroInterior");
                }
            }
        }
        private string _domicilio_NroInterior;
    
        [DataMember]
        public string colonia
        {
            get { return _colonia; }
            set
            {
                if (_colonia != value)
                {
                    OnComplexPropertyChanging();
                    _colonia = value;
                    OnPropertyChanged("colonia");
                }
            }
        }
        private string _colonia;
    
        [DataMember]
        public string municipio
        {
            get { return _municipio; }
            set
            {
                if (_municipio != value)
                {
                    OnComplexPropertyChanging();
                    _municipio = value;
                    OnPropertyChanged("municipio");
                }
            }
        }
        private string _municipio;
    
        [DataMember]
        public string ciudad
        {
            get { return _ciudad; }
            set
            {
                if (_ciudad != value)
                {
                    OnComplexPropertyChanging();
                    _ciudad = value;
                    OnPropertyChanged("ciudad");
                }
            }
        }
        private string _ciudad;
    
        [DataMember]
        public string estado
        {
            get { return _estado; }
            set
            {
                if (_estado != value)
                {
                    OnComplexPropertyChanging();
                    _estado = value;
                    OnPropertyChanged("estado");
                }
            }
        }
        private string _estado;
    
        [DataMember]
        public string pais
        {
            get { return _pais; }
            set
            {
                if (_pais != value)
                {
                    OnComplexPropertyChanging();
                    _pais = value;
                    OnPropertyChanged("pais");
                }
            }
        }
        private string _pais;
    
        [DataMember]
        public string CodigoPostal
        {
            get { return _codigoPostal; }
            set
            {
                if (_codigoPostal != value)
                {
                    OnComplexPropertyChanging();
                    _codigoPostal = value;
                    OnPropertyChanged("CodigoPostal");
                }
            }
        }
        private string _codigoPostal;
    
        [DataMember]
        public string giro
        {
            get { return _giro; }
            set
            {
                if (_giro != value)
                {
                    OnComplexPropertyChanging();
                    _giro = value;
                    OnPropertyChanged("giro");
                }
            }
        }
        private string _giro;
    
        [DataMember]
        public Nullable<double> Edificio
        {
            get { return _edificio; }
            set
            {
                if (_edificio != value)
                {
                    OnComplexPropertyChanging();
                    _edificio = value;
                    OnPropertyChanged("Edificio");
                }
            }
        }
        private Nullable<double> _edificio;
    
        [DataMember]
        public Nullable<double> Contenido
        {
            get { return _contenido; }
            set
            {
                if (_contenido != value)
                {
                    OnComplexPropertyChanging();
                    _contenido = value;
                    OnPropertyChanged("Contenido");
                }
            }
        }
        private Nullable<double> _contenido;
    
        [DataMember]
        public Nullable<double> Interperie
        {
            get { return _interperie; }
            set
            {
                if (_interperie != value)
                {
                    OnComplexPropertyChanging();
                    _interperie = value;
                    OnPropertyChanged("Interperie");
                }
            }
        }
        private Nullable<double> _interperie;
    
        [DataMember]
        public Nullable<double> Inventario
        {
            get { return _inventario; }
            set
            {
                if (_inventario != value)
                {
                    OnComplexPropertyChanging();
                    _inventario = value;
                    OnPropertyChanged("Inventario");
                }
            }
        }
        private Nullable<double> _inventario;
    
        [DataMember]
        public Nullable<double> Escombros
        {
            get { return _escombros; }
            set
            {
                if (_escombros != value)
                {
                    OnComplexPropertyChanging();
                    _escombros = value;
                    OnPropertyChanged("Escombros");
                }
            }
        }
        private Nullable<double> _escombros;
    
        [DataMember]
        public Nullable<double> Conocidos
        {
            get { return _conocidos; }
            set
            {
                if (_conocidos != value)
                {
                    OnComplexPropertyChanging();
                    _conocidos = value;
                    OnPropertyChanged("Conocidos");
                }
            }
        }
        private Nullable<double> _conocidos;
    
        [DataMember]
        public Nullable<double> Nuevos
        {
            get { return _nuevos; }
            set
            {
                if (_nuevos != value)
                {
                    OnComplexPropertyChanging();
                    _nuevos = value;
                    OnPropertyChanged("Nuevos");
                }
            }
        }
        private Nullable<double> _nuevos;
    
        [DataMember]
        public Nullable<double> GBrutas
        {
            get { return _gBrutas; }
            set
            {
                if (_gBrutas != value)
                {
                    OnComplexPropertyChanging();
                    _gBrutas = value;
                    OnPropertyChanged("GBrutas");
                }
            }
        }
        private Nullable<double> _gBrutas;
    
        [DataMember]
        public Nullable<double> PerRentas
        {
            get { return _perRentas; }
            set
            {
                if (_perRentas != value)
                {
                    OnComplexPropertyChanging();
                    _perRentas = value;
                    OnPropertyChanged("PerRentas");
                }
            }
        }
        private Nullable<double> _perRentas;
    
        [DataMember]
        public Nullable<double> PerUtilidades
        {
            get { return _perUtilidades; }
            set
            {
                if (_perUtilidades != value)
                {
                    OnComplexPropertyChanging();
                    _perUtilidades = value;
                    OnPropertyChanged("PerUtilidades");
                }
            }
        }
        private Nullable<double> _perUtilidades;
    
        [DataMember]
        public Nullable<double> ReduccIngresos
        {
            get { return _reduccIngresos; }
            set
            {
                if (_reduccIngresos != value)
                {
                    OnComplexPropertyChanging();
                    _reduccIngresos = value;
                    OnPropertyChanged("ReduccIngresos");
                }
            }
        }
        private Nullable<double> _reduccIngresos;
    
        [DataMember]
        public Nullable<double> SeguroContingente
        {
            get { return _seguroContingente; }
            set
            {
                if (_seguroContingente != value)
                {
                    OnComplexPropertyChanging();
                    _seguroContingente = value;
                    OnPropertyChanged("SeguroContingente");
                }
            }
        }
        private Nullable<double> _seguroContingente;
    
        [DataMember]
        public Nullable<double> GExtra
        {
            get { return _gExtra; }
            set
            {
                if (_gExtra != value)
                {
                    OnComplexPropertyChanging();
                    _gExtra = value;
                    OnPropertyChanged("GExtra");
                }
            }
        }
        private Nullable<double> _gExtra;
    
        [DataMember]
        public string SIC
        {
            get { return _sIC; }
            set
            {
                if (_sIC != value)
                {
                    OnComplexPropertyChanging();
                    _sIC = value;
                    OnPropertyChanged("SIC");
                }
            }
        }
        private string _sIC;
    
        [DataMember]
        public Nullable<int> añoConstruccion
        {
            get { return _añoConstruccion; }
            set
            {
                if (_añoConstruccion != value)
                {
                    OnComplexPropertyChanging();
                    _añoConstruccion = value;
                    OnPropertyChanged("añoConstruccion");
                }
            }
        }
        private Nullable<int> _añoConstruccion;
    
        [DataMember]
        public int nroPiso
        {
            get { return _nroPiso; }
            set
            {
                if (_nroPiso != value)
                {
                    OnComplexPropertyChanging();
                    _nroPiso = value;
                    OnPropertyChanged("nroPiso");
                }
            }
        }
        private int _nroPiso;
    
        [DataMember]
        public int nroSotano
        {
            get { return _nroSotano; }
            set
            {
                if (_nroSotano != value)
                {
                    OnComplexPropertyChanging();
                    _nroSotano = value;
                    OnPropertyChanged("nroSotano");
                }
            }
        }
        private int _nroSotano;
    
        [DataMember]
        public string grupo
        {
            get { return _grupo; }
            set
            {
                if (_grupo != value)
                {
                    OnComplexPropertyChanging();
                    _grupo = value;
                    OnPropertyChanged("grupo");
                }
            }
        }
        private string _grupo;
    
        [DataMember]
        public string gradoExp
        {
            get { return _gradoExp; }
            set
            {
                if (_gradoExp != value)
                {
                    OnComplexPropertyChanging();
                    _gradoExp = value;
                    OnPropertyChanged("gradoExp");
                }
            }
        }
        private string _gradoExp;
    
        [DataMember]
        public string tipoConst
        {
            get { return _tipoConst; }
            set
            {
                if (_tipoConst != value)
                {
                    OnComplexPropertyChanging();
                    _tipoConst = value;
                    OnPropertyChanged("tipoConst");
                }
            }
        }
        private string _tipoConst;
    
        [DataMember]
        public string tarifacion
        {
            get { return _tarifacion; }
            set
            {
                if (_tarifacion != value)
                {
                    OnComplexPropertyChanging();
                    _tarifacion = value;
                    OnPropertyChanged("tarifacion");
                }
            }
        }
        private string _tarifacion;
    
        [DataMember]
        public string proPublica
        {
            get { return _proPublica; }
            set
            {
                if (_proPublica != value)
                {
                    OnComplexPropertyChanging();
                    _proPublica = value;
                    OnPropertyChanged("proPublica");
                }
            }
        }
        private string _proPublica;
    
        [DataMember]
        public string proPrivada
        {
            get { return _proPrivada; }
            set
            {
                if (_proPrivada != value)
                {
                    OnComplexPropertyChanging();
                    _proPrivada = value;
                    OnPropertyChanged("proPrivada");
                }
            }
        }
        private string _proPrivada;
    
        [DataMember]
        public string expoInterna
        {
            get { return _expoInterna; }
            set
            {
                if (_expoInterna != value)
                {
                    OnComplexPropertyChanging();
                    _expoInterna = value;
                    OnPropertyChanged("expoInterna");
                }
            }
        }
        private string _expoInterna;
    
        [DataMember]
        public string expoExterna
        {
            get { return _expoExterna; }
            set
            {
                if (_expoExterna != value)
                {
                    OnComplexPropertyChanging();
                    _expoExterna = value;
                    OnPropertyChanged("expoExterna");
                }
            }
        }
        private string _expoExterna;
    
        [DataMember]
        public string expoAgua
        {
            get { return _expoAgua; }
            set
            {
                if (_expoAgua != value)
                {
                    OnComplexPropertyChanging();
                    _expoAgua = value;
                    OnPropertyChanged("expoAgua");
                }
            }
        }
        private string _expoAgua;
    
        [DataMember]
        public string expoHumo
        {
            get { return _expoHumo; }
            set
            {
                if (_expoHumo != value)
                {
                    OnComplexPropertyChanging();
                    _expoHumo = value;
                    OnPropertyChanged("expoHumo");
                }
            }
        }
        private string _expoHumo;
    
        [DataMember]
        public string RangoNiveles
        {
            get { return _rangoNiveles; }
            set
            {
                if (_rangoNiveles != value)
                {
                    OnComplexPropertyChanging();
                    _rangoNiveles = value;
                    OnPropertyChanged("RangoNiveles");
                }
            }
        }
        private string _rangoNiveles;
    
        [DataMember]
        public string zonaTEV
        {
            get { return _zonaTEV; }
            set
            {
                if (_zonaTEV != value)
                {
                    OnComplexPropertyChanging();
                    _zonaTEV = value;
                    OnPropertyChanged("zonaTEV");
                }
            }
        }
        private string _zonaTEV;
    
        [DataMember]
        public Nullable<double> CoaseguroTerremoto
        {
            get { return _coaseguroTerremoto; }
            set
            {
                if (_coaseguroTerremoto != value)
                {
                    OnComplexPropertyChanging();
                    _coaseguroTerremoto = value;
                    OnPropertyChanged("CoaseguroTerremoto");
                }
            }
        }
        private Nullable<double> _coaseguroTerremoto;
    
        [DataMember]
        public Nullable<decimal> deducibleTerremoto
        {
            get { return _deducibleTerremoto; }
            set
            {
                if (_deducibleTerremoto != value)
                {
                    OnComplexPropertyChanging();
                    _deducibleTerremoto = value;
                    OnPropertyChanged("deducibleTerremoto");
                }
            }
        }
        private Nullable<decimal> _deducibleTerremoto;
    
        [DataMember]
        public string crestaTerremoto
        {
            get { return _crestaTerremoto; }
            set
            {
                if (_crestaTerremoto != value)
                {
                    OnComplexPropertyChanging();
                    _crestaTerremoto = value;
                    OnPropertyChanged("crestaTerremoto");
                }
            }
        }
        private string _crestaTerremoto;
    
        [DataMember]
        public string zonaHidro
        {
            get { return _zonaHidro; }
            set
            {
                if (_zonaHidro != value)
                {
                    OnComplexPropertyChanging();
                    _zonaHidro = value;
                    OnPropertyChanged("zonaHidro");
                }
            }
        }
        private string _zonaHidro;
    
        [DataMember]
        public Nullable<decimal> coaseguroHidro
        {
            get { return _coaseguroHidro; }
            set
            {
                if (_coaseguroHidro != value)
                {
                    OnComplexPropertyChanging();
                    _coaseguroHidro = value;
                    OnPropertyChanged("coaseguroHidro");
                }
            }
        }
        private Nullable<decimal> _coaseguroHidro;
    
        [DataMember]
        public Nullable<decimal> deducibleHidro
        {
            get { return _deducibleHidro; }
            set
            {
                if (_deducibleHidro != value)
                {
                    OnComplexPropertyChanging();
                    _deducibleHidro = value;
                    OnPropertyChanged("deducibleHidro");
                }
            }
        }
        private Nullable<decimal> _deducibleHidro;
    
        [DataMember]
        public bool UbicacionCosta
        {
            get { return _ubicacionCosta; }
            set
            {
                if (_ubicacionCosta != value)
                {
                    OnComplexPropertyChanging();
                    _ubicacionCosta = value;
                    OnPropertyChanged("UbicacionCosta");
                }
            }
        }
        private bool _ubicacionCosta;
    
        [DataMember]
        public string crestaHidro
        {
            get { return _crestaHidro; }
            set
            {
                if (_crestaHidro != value)
                {
                    OnComplexPropertyChanging();
                    _crestaHidro = value;
                    OnPropertyChanged("crestaHidro");
                }
            }
        }
        private string _crestaHidro;
    
        [DataMember]
        public Nullable<double> Longitud
        {
            get { return _longitud; }
            set
            {
                if (_longitud != value)
                {
                    OnComplexPropertyChanging();
                    _longitud = value;
                    OnPropertyChanged("Longitud");
                }
            }
        }
        private Nullable<double> _longitud;
    
        [DataMember]
        public Nullable<double> Latitud
        {
            get { return _latitud; }
            set
            {
                if (_latitud != value)
                {
                    OnComplexPropertyChanging();
                    _latitud = value;
                    OnPropertyChanged("Latitud");
                }
            }
        }
        private Nullable<double> _latitud;
    
        [DataMember]
        public double Comision
        {
            get { return _comision; }
            set
            {
                if (_comision != value)
                {
                    OnComplexPropertyChanging();
                    _comision = value;
                    OnPropertyChanged("Comision");
                }
            }
        }
        private double _comision;
    
        [DataMember]
        public Nullable<double> DeducibleUSD
        {
            get { return _deducibleUSD; }
            set
            {
                if (_deducibleUSD != value)
                {
                    OnComplexPropertyChanging();
                    _deducibleUSD = value;
                    OnPropertyChanged("DeducibleUSD");
                }
            }
        }
        private Nullable<double> _deducibleUSD;
    
        [DataMember]
        public Nullable<double> Calderas
        {
            get { return _calderas; }
            set
            {
                if (_calderas != value)
                {
                    OnComplexPropertyChanging();
                    _calderas = value;
                    OnPropertyChanged("Calderas");
                }
            }
        }
        private Nullable<double> _calderas;
    
        [DataMember]
        public Nullable<double> CalderasPC
        {
            get { return _calderasPC; }
            set
            {
                if (_calderasPC != value)
                {
                    OnComplexPropertyChanging();
                    _calderasPC = value;
                    OnPropertyChanged("CalderasPC");
                }
            }
        }
        private Nullable<double> _calderasPC;
    
        [DataMember]
        public Nullable<double> RotMaq
        {
            get { return _rotMaq; }
            set
            {
                if (_rotMaq != value)
                {
                    OnComplexPropertyChanging();
                    _rotMaq = value;
                    OnPropertyChanged("RotMaq");
                }
            }
        }
        private Nullable<double> _rotMaq;
    
        [DataMember]
        public Nullable<double> RotMaqPC
        {
            get { return _rotMaqPC; }
            set
            {
                if (_rotMaqPC != value)
                {
                    OnComplexPropertyChanging();
                    _rotMaqPC = value;
                    OnPropertyChanged("RotMaqPC");
                }
            }
        }
        private Nullable<double> _rotMaqPC;
    
        [DataMember]
        public Nullable<double> EqContratista
        {
            get { return _eqContratista; }
            set
            {
                if (_eqContratista != value)
                {
                    OnComplexPropertyChanging();
                    _eqContratista = value;
                    OnPropertyChanged("EqContratista");
                }
            }
        }
        private Nullable<double> _eqContratista;
    
        [DataMember]
        public Nullable<double> EqElec
        {
            get { return _eqElec; }
            set
            {
                if (_eqElec != value)
                {
                    OnComplexPropertyChanging();
                    _eqElec = value;
                    OnPropertyChanged("EqElec");
                }
            }
        }
        private Nullable<double> _eqElec;
    
        [DataMember]
        public Nullable<double> EqElecMov
        {
            get { return _eqElecMov; }
            set
            {
                if (_eqElecMov != value)
                {
                    OnComplexPropertyChanging();
                    _eqElecMov = value;
                    OnPropertyChanged("EqElecMov");
                }
            }
        }
        private Nullable<double> _eqElecMov;
    
        [DataMember]
        public Nullable<double> EEPort
        {
            get { return _eEPort; }
            set
            {
                if (_eEPort != value)
                {
                    OnComplexPropertyChanging();
                    _eEPort = value;
                    OnPropertyChanged("EEPort");
                }
            }
        }
        private Nullable<double> _eEPort;
    
        [DataMember]
        public Nullable<double> EEIncCosto
        {
            get { return _eEIncCosto; }
            set
            {
                if (_eEIncCosto != value)
                {
                    OnComplexPropertyChanging();
                    _eEIncCosto = value;
                    OnPropertyChanged("EEIncCosto");
                }
            }
        }
        private Nullable<double> _eEIncCosto;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, SelectPresentacionUbicaciones_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nroUbicacion", parentPropertyName), complexObject == null ? null : (object)complexObject.nroUbicacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Domicilio_Calle", parentPropertyName), complexObject == null ? null : (object)complexObject.Domicilio_Calle);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Domicilio_NroExterior", parentPropertyName), complexObject == null ? null : (object)complexObject.Domicilio_NroExterior);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Domicilio_NroInterior", parentPropertyName), complexObject == null ? null : (object)complexObject.Domicilio_NroInterior);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.colonia", parentPropertyName), complexObject == null ? null : (object)complexObject.colonia);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.municipio", parentPropertyName), complexObject == null ? null : (object)complexObject.municipio);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ciudad", parentPropertyName), complexObject == null ? null : (object)complexObject.ciudad);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.estado", parentPropertyName), complexObject == null ? null : (object)complexObject.estado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.pais", parentPropertyName), complexObject == null ? null : (object)complexObject.pais);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CodigoPostal", parentPropertyName), complexObject == null ? null : (object)complexObject.CodigoPostal);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.giro", parentPropertyName), complexObject == null ? null : (object)complexObject.giro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Edificio", parentPropertyName), complexObject == null ? null : (object)complexObject.Edificio);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Contenido", parentPropertyName), complexObject == null ? null : (object)complexObject.Contenido);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Interperie", parentPropertyName), complexObject == null ? null : (object)complexObject.Interperie);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Inventario", parentPropertyName), complexObject == null ? null : (object)complexObject.Inventario);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Escombros", parentPropertyName), complexObject == null ? null : (object)complexObject.Escombros);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Conocidos", parentPropertyName), complexObject == null ? null : (object)complexObject.Conocidos);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Nuevos", parentPropertyName), complexObject == null ? null : (object)complexObject.Nuevos);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.GBrutas", parentPropertyName), complexObject == null ? null : (object)complexObject.GBrutas);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.PerRentas", parentPropertyName), complexObject == null ? null : (object)complexObject.PerRentas);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.PerUtilidades", parentPropertyName), complexObject == null ? null : (object)complexObject.PerUtilidades);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ReduccIngresos", parentPropertyName), complexObject == null ? null : (object)complexObject.ReduccIngresos);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.SeguroContingente", parentPropertyName), complexObject == null ? null : (object)complexObject.SeguroContingente);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.GExtra", parentPropertyName), complexObject == null ? null : (object)complexObject.GExtra);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.SIC", parentPropertyName), complexObject == null ? null : (object)complexObject.SIC);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.añoConstruccion", parentPropertyName), complexObject == null ? null : (object)complexObject.añoConstruccion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nroPiso", parentPropertyName), complexObject == null ? null : (object)complexObject.nroPiso);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nroSotano", parentPropertyName), complexObject == null ? null : (object)complexObject.nroSotano);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.grupo", parentPropertyName), complexObject == null ? null : (object)complexObject.grupo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.gradoExp", parentPropertyName), complexObject == null ? null : (object)complexObject.gradoExp);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tipoConst", parentPropertyName), complexObject == null ? null : (object)complexObject.tipoConst);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tarifacion", parentPropertyName), complexObject == null ? null : (object)complexObject.tarifacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.proPublica", parentPropertyName), complexObject == null ? null : (object)complexObject.proPublica);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.proPrivada", parentPropertyName), complexObject == null ? null : (object)complexObject.proPrivada);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.expoInterna", parentPropertyName), complexObject == null ? null : (object)complexObject.expoInterna);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.expoExterna", parentPropertyName), complexObject == null ? null : (object)complexObject.expoExterna);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.expoAgua", parentPropertyName), complexObject == null ? null : (object)complexObject.expoAgua);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.expoHumo", parentPropertyName), complexObject == null ? null : (object)complexObject.expoHumo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.RangoNiveles", parentPropertyName), complexObject == null ? null : (object)complexObject.RangoNiveles);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.zonaTEV", parentPropertyName), complexObject == null ? null : (object)complexObject.zonaTEV);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CoaseguroTerremoto", parentPropertyName), complexObject == null ? null : (object)complexObject.CoaseguroTerremoto);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.deducibleTerremoto", parentPropertyName), complexObject == null ? null : (object)complexObject.deducibleTerremoto);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.crestaTerremoto", parentPropertyName), complexObject == null ? null : (object)complexObject.crestaTerremoto);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.zonaHidro", parentPropertyName), complexObject == null ? null : (object)complexObject.zonaHidro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.coaseguroHidro", parentPropertyName), complexObject == null ? null : (object)complexObject.coaseguroHidro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.deducibleHidro", parentPropertyName), complexObject == null ? null : (object)complexObject.deducibleHidro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.UbicacionCosta", parentPropertyName), complexObject == null ? null : (object)complexObject.UbicacionCosta);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.crestaHidro", parentPropertyName), complexObject == null ? null : (object)complexObject.crestaHidro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Longitud", parentPropertyName), complexObject == null ? null : (object)complexObject.Longitud);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Latitud", parentPropertyName), complexObject == null ? null : (object)complexObject.Latitud);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Comision", parentPropertyName), complexObject == null ? null : (object)complexObject.Comision);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.DeducibleUSD", parentPropertyName), complexObject == null ? null : (object)complexObject.DeducibleUSD);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Calderas", parentPropertyName), complexObject == null ? null : (object)complexObject.Calderas);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CalderasPC", parentPropertyName), complexObject == null ? null : (object)complexObject.CalderasPC);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.RotMaq", parentPropertyName), complexObject == null ? null : (object)complexObject.RotMaq);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.RotMaqPC", parentPropertyName), complexObject == null ? null : (object)complexObject.RotMaqPC);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EqContratista", parentPropertyName), complexObject == null ? null : (object)complexObject.EqContratista);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EqElec", parentPropertyName), complexObject == null ? null : (object)complexObject.EqElec);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EqElecMov", parentPropertyName), complexObject == null ? null : (object)complexObject.EqElecMov);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EEPort", parentPropertyName), complexObject == null ? null : (object)complexObject.EEPort);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EEIncCosto", parentPropertyName), complexObject == null ? null : (object)complexObject.EEIncCosto);
        }

        #endregion

    }
}
