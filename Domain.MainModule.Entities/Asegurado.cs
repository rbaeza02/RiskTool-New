//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using Domain.Core.Entities;

namespace Domain.MainModule.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Colonia))]
    [KnownType(typeof(EstadoCivil))]
    [KnownType(typeof(Genero))]
    [KnownType(typeof(TipoPersona))]
    [KnownType(typeof(TipoTelefono))]
    [KnownType(typeof(Usuario))]
    [KnownType(typeof(Ubicacion))]
    [KnownType(typeof(Cotizacion))]
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 4.0")]
    #if !SILVERLIGHT
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
    #endif
    public partial class Asegurado: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int AseguradoID
        {
            get { return _aseguradoID; }
            set
            {
                if (_aseguradoID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'AseguradoID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _aseguradoID = value;
                    OnPropertyChanged("AseguradoID");
                }
            }
        }
        private int _aseguradoID;
    
        [DataMember]
        public string Nombres
        {
            get { return _nombres; }
            set
            {
                if (_nombres != value)
                {
                    _nombres = value;
                    OnPropertyChanged("Nombres");
                }
            }
        }
        private string _nombres;
    
        [DataMember]
        public string Apellido1
        {
            get { return _apellido1; }
            set
            {
                if (_apellido1 != value)
                {
                    _apellido1 = value;
                    OnPropertyChanged("Apellido1");
                }
            }
        }
        private string _apellido1;
    
        [DataMember]
        public string Apellido2
        {
            get { return _apellido2; }
            set
            {
                if (_apellido2 != value)
                {
                    _apellido2 = value;
                    OnPropertyChanged("Apellido2");
                }
            }
        }
        private string _apellido2;
    
        [DataMember]
        public string RazonSocial
        {
            get { return _razonSocial; }
            set
            {
                if (_razonSocial != value)
                {
                    _razonSocial = value;
                    OnPropertyChanged("RazonSocial");
                }
            }
        }
        private string _razonSocial;
    
        [DataMember]
        public string RFC
        {
            get { return _rFC; }
            set
            {
                if (_rFC != value)
                {
                    _rFC = value;
                    OnPropertyChanged("RFC");
                }
            }
        }
        private string _rFC;
    
        [DataMember]
        public string CURP
        {
            get { return _cURP; }
            set
            {
                if (_cURP != value)
                {
                    _cURP = value;
                    OnPropertyChanged("CURP");
                }
            }
        }
        private string _cURP;
    
        [DataMember]
        public System.DateTime FechaNacimiento
        {
            get { return _fechaNacimiento; }
            set
            {
                if (_fechaNacimiento != value)
                {
                    _fechaNacimiento = value;
                    OnPropertyChanged("FechaNacimiento");
                }
            }
        }
        private System.DateTime _fechaNacimiento;
    
        [DataMember]
        public string DomicilioFiscal_Calle
        {
            get { return _domicilioFiscal_Calle; }
            set
            {
                if (_domicilioFiscal_Calle != value)
                {
                    _domicilioFiscal_Calle = value;
                    OnPropertyChanged("DomicilioFiscal_Calle");
                }
            }
        }
        private string _domicilioFiscal_Calle;
    
        [DataMember]
        public string DomicilioFiscal_NroExterior
        {
            get { return _domicilioFiscal_NroExterior; }
            set
            {
                if (_domicilioFiscal_NroExterior != value)
                {
                    _domicilioFiscal_NroExterior = value;
                    OnPropertyChanged("DomicilioFiscal_NroExterior");
                }
            }
        }
        private string _domicilioFiscal_NroExterior;
    
        [DataMember]
        public string DomicilioFiscal_NroInterior
        {
            get { return _domicilioFiscal_NroInterior; }
            set
            {
                if (_domicilioFiscal_NroInterior != value)
                {
                    _domicilioFiscal_NroInterior = value;
                    OnPropertyChanged("DomicilioFiscal_NroInterior");
                }
            }
        }
        private string _domicilioFiscal_NroInterior;
    
        [DataMember]
        public Nullable<int> GeneroID
        {
            get { return _generoID; }
            set
            {
                if (_generoID != value)
                {
                    ChangeTracker.RecordOriginalValue("GeneroID", _generoID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_Genero != null && bk_tc_Genero.GeneroID != value)
                        {
                            bk_tc_Genero = null;
                        }
                    }
                    _generoID = value;
                    OnPropertyChanged("GeneroID");
                }
            }
        }
        private Nullable<int> _generoID;
    
        [DataMember]
        public string webPage
        {
            get { return _webPage; }
            set
            {
                if (_webPage != value)
                {
                    _webPage = value;
                    OnPropertyChanged("webPage");
                }
            }
        }
        private string _webPage;
    
        [DataMember]
        public int TipoPersonaID
        {
            get { return _tipoPersonaID; }
            set
            {
                if (_tipoPersonaID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoPersonaID", _tipoPersonaID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_TipoPersona != null && bk_tc_TipoPersona.TipoPersonaID != value)
                        {
                            bk_tc_TipoPersona = null;
                        }
                    }
                    _tipoPersonaID = value;
                    OnPropertyChanged("TipoPersonaID");
                }
            }
        }
        private int _tipoPersonaID;
    
        [DataMember]
        public string CodigoPostal
        {
            get { return _codigoPostal; }
            set
            {
                if (_codigoPostal != value)
                {
                    _codigoPostal = value;
                    OnPropertyChanged("CodigoPostal");
                }
            }
        }
        private string _codigoPostal;
    
        [DataMember]
        public int ColoniaID
        {
            get { return _coloniaID; }
            set
            {
                if (_coloniaID != value)
                {
                    ChangeTracker.RecordOriginalValue("ColoniaID", _coloniaID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_Colonia != null && bk_tc_Colonia.ColoniaID != value)
                        {
                            bk_tc_Colonia = null;
                        }
                    }
                    _coloniaID = value;
                    OnPropertyChanged("ColoniaID");
                }
            }
        }
        private int _coloniaID;
    
        [DataMember]
        public string giro
        {
            get { return _giro; }
            set
            {
                if (_giro != value)
                {
                    _giro = value;
                    OnPropertyChanged("giro");
                }
            }
        }
        private string _giro;
    
        [DataMember]
        public string SIC
        {
            get { return _sIC; }
            set
            {
                if (_sIC != value)
                {
                    _sIC = value;
                    OnPropertyChanged("SIC");
                }
            }
        }
        private string _sIC;
    
        [DataMember]
        public Nullable<int> EstadoCivilID
        {
            get { return _estadoCivilID; }
            set
            {
                if (_estadoCivilID != value)
                {
                    ChangeTracker.RecordOriginalValue("EstadoCivilID", _estadoCivilID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_EstadoCivil != null && bk_tc_EstadoCivil.EstadoCivilID != value)
                        {
                            bk_tc_EstadoCivil = null;
                        }
                    }
                    _estadoCivilID = value;
                    OnPropertyChanged("EstadoCivilID");
                }
            }
        }
        private Nullable<int> _estadoCivilID;
    
        [DataMember]
        public string Telefono
        {
            get { return _telefono; }
            set
            {
                if (_telefono != value)
                {
                    _telefono = value;
                    OnPropertyChanged("Telefono");
                }
            }
        }
        private string _telefono;
    
        [DataMember]
        public int TipoTelefonoID
        {
            get { return _tipoTelefonoID; }
            set
            {
                if (_tipoTelefonoID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoTelefonoID", _tipoTelefonoID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_TipoTelefono != null && bk_tc_TipoTelefono.TipoTelefonoID != value)
                        {
                            bk_tc_TipoTelefono = null;
                        }
                    }
                    _tipoTelefonoID = value;
                    OnPropertyChanged("TipoTelefonoID");
                }
            }
        }
        private int _tipoTelefonoID;
    
        [DataMember]
        public int usuarioid
        {
            get { return _usuarioid; }
            set
            {
                if (_usuarioid != value)
                {
                    ChangeTracker.RecordOriginalValue("usuarioid", _usuarioid);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_Usuario != null && bk_tc_Usuario.UsuarioID != value)
                        {
                            bk_tc_Usuario = null;
                        }
                    }
                    _usuarioid = value;
                    OnPropertyChanged("usuarioid");
                }
            }
        }
        private int _usuarioid;
    
        [DataMember]
        public string LugarNacimiento
        {
            get { return _lugarNacimiento; }
            set
            {
                if (_lugarNacimiento != value)
                {
                    _lugarNacimiento = value;
                    OnPropertyChanged("LugarNacimiento");
                }
            }
        }
        private string _lugarNacimiento;
    
        [DataMember]
        public Nullable<bool> isOFAC
        {
            get { return _isOFAC; }
            set
            {
                if (_isOFAC != value)
                {
                    _isOFAC = value;
                    OnPropertyChanged("isOFAC");
                }
            }
        }
        private Nullable<bool> _isOFAC;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Colonia bk_tc_Colonia
        {
            get { return _bk_tc_Colonia; }
            set
            {
                if (!ReferenceEquals(_bk_tc_Colonia, value))
                {
                    var previousValue = _bk_tc_Colonia;
                    _bk_tc_Colonia = value;
                    Fixupbk_tc_Colonia(previousValue);
                    OnNavigationPropertyChanged("bk_tc_Colonia");
                }
            }
        }
        private Colonia _bk_tc_Colonia;
    
        [DataMember]
        public EstadoCivil bk_tc_EstadoCivil
        {
            get { return _bk_tc_EstadoCivil; }
            set
            {
                if (!ReferenceEquals(_bk_tc_EstadoCivil, value))
                {
                    var previousValue = _bk_tc_EstadoCivil;
                    _bk_tc_EstadoCivil = value;
                    Fixupbk_tc_EstadoCivil(previousValue);
                    OnNavigationPropertyChanged("bk_tc_EstadoCivil");
                }
            }
        }
        private EstadoCivil _bk_tc_EstadoCivil;
    
        [DataMember]
        public Genero bk_tc_Genero
        {
            get { return _bk_tc_Genero; }
            set
            {
                if (!ReferenceEquals(_bk_tc_Genero, value))
                {
                    var previousValue = _bk_tc_Genero;
                    _bk_tc_Genero = value;
                    Fixupbk_tc_Genero(previousValue);
                    OnNavigationPropertyChanged("bk_tc_Genero");
                }
            }
        }
        private Genero _bk_tc_Genero;
    
        [DataMember]
        public TipoPersona bk_tc_TipoPersona
        {
            get { return _bk_tc_TipoPersona; }
            set
            {
                if (!ReferenceEquals(_bk_tc_TipoPersona, value))
                {
                    var previousValue = _bk_tc_TipoPersona;
                    _bk_tc_TipoPersona = value;
                    Fixupbk_tc_TipoPersona(previousValue);
                    OnNavigationPropertyChanged("bk_tc_TipoPersona");
                }
            }
        }
        private TipoPersona _bk_tc_TipoPersona;
    
        [DataMember]
        public TipoTelefono bk_tc_TipoTelefono
        {
            get { return _bk_tc_TipoTelefono; }
            set
            {
                if (!ReferenceEquals(_bk_tc_TipoTelefono, value))
                {
                    var previousValue = _bk_tc_TipoTelefono;
                    _bk_tc_TipoTelefono = value;
                    Fixupbk_tc_TipoTelefono(previousValue);
                    OnNavigationPropertyChanged("bk_tc_TipoTelefono");
                }
            }
        }
        private TipoTelefono _bk_tc_TipoTelefono;
    
        [DataMember]
        public Usuario bk_tc_Usuario
        {
            get { return _bk_tc_Usuario; }
            set
            {
                if (!ReferenceEquals(_bk_tc_Usuario, value))
                {
                    var previousValue = _bk_tc_Usuario;
                    _bk_tc_Usuario = value;
                    Fixupbk_tc_Usuario(previousValue);
                    OnNavigationPropertyChanged("bk_tc_Usuario");
                }
            }
        }
        private Usuario _bk_tc_Usuario;
    
        [DataMember]
        public TrackableCollection<Ubicacion> bk_tc_Ubicacion
        {
            get
            {
                if (_bk_tc_Ubicacion == null)
                {
                    _bk_tc_Ubicacion = new TrackableCollection<Ubicacion>();
                    _bk_tc_Ubicacion.CollectionChanged += Fixupbk_tc_Ubicacion;
                }
                return _bk_tc_Ubicacion;
            }
            set
            {
                if (!ReferenceEquals(_bk_tc_Ubicacion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bk_tc_Ubicacion != null)
                    {
                        _bk_tc_Ubicacion.CollectionChanged -= Fixupbk_tc_Ubicacion;
                    }
                    _bk_tc_Ubicacion = value;
                    if (_bk_tc_Ubicacion != null)
                    {
                        _bk_tc_Ubicacion.CollectionChanged += Fixupbk_tc_Ubicacion;
                    }
                    OnNavigationPropertyChanged("bk_tc_Ubicacion");
                }
            }
        }
        private TrackableCollection<Ubicacion> _bk_tc_Ubicacion;
    
        [DataMember]
        public TrackableCollection<Cotizacion> bk_te_Cotizacion
        {
            get
            {
                if (_bk_te_Cotizacion == null)
                {
                    _bk_te_Cotizacion = new TrackableCollection<Cotizacion>();
                    _bk_te_Cotizacion.CollectionChanged += Fixupbk_te_Cotizacion;
                }
                return _bk_te_Cotizacion;
            }
            set
            {
                if (!ReferenceEquals(_bk_te_Cotizacion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bk_te_Cotizacion != null)
                    {
                        _bk_te_Cotizacion.CollectionChanged -= Fixupbk_te_Cotizacion;
                    }
                    _bk_te_Cotizacion = value;
                    if (_bk_te_Cotizacion != null)
                    {
                        _bk_te_Cotizacion.CollectionChanged += Fixupbk_te_Cotizacion;
                    }
                    OnNavigationPropertyChanged("bk_te_Cotizacion");
                }
            }
        }
        private TrackableCollection<Cotizacion> _bk_te_Cotizacion;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            bk_tc_Colonia = null;
            bk_tc_EstadoCivil = null;
            bk_tc_Genero = null;
            bk_tc_TipoPersona = null;
            bk_tc_TipoTelefono = null;
            bk_tc_Usuario = null;
            bk_tc_Ubicacion.Clear();
            bk_te_Cotizacion.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void Fixupbk_tc_Colonia(Colonia previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Asegurado.Contains(this))
            {
                previousValue.bk_tc_Asegurado.Remove(this);
            }
    
            if (bk_tc_Colonia != null)
            {
                if (!bk_tc_Colonia.bk_tc_Asegurado.Contains(this))
                {
                    bk_tc_Colonia.bk_tc_Asegurado.Add(this);
                }
    
                ColoniaID = bk_tc_Colonia.ColoniaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_Colonia")
                    && (ChangeTracker.OriginalValues["bk_tc_Colonia"] == bk_tc_Colonia))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_Colonia");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_Colonia", previousValue);
                }
                if (bk_tc_Colonia != null && !bk_tc_Colonia.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_Colonia.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_EstadoCivil(EstadoCivil previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Asegurado.Contains(this))
            {
                previousValue.bk_tc_Asegurado.Remove(this);
            }
    
            if (bk_tc_EstadoCivil != null)
            {
                if (!bk_tc_EstadoCivil.bk_tc_Asegurado.Contains(this))
                {
                    bk_tc_EstadoCivil.bk_tc_Asegurado.Add(this);
                }
    
                EstadoCivilID = bk_tc_EstadoCivil.EstadoCivilID;
            }
            else if (!skipKeys)
            {
                EstadoCivilID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_EstadoCivil")
                    && (ChangeTracker.OriginalValues["bk_tc_EstadoCivil"] == bk_tc_EstadoCivil))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_EstadoCivil");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_EstadoCivil", previousValue);
                }
                if (bk_tc_EstadoCivil != null && !bk_tc_EstadoCivil.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_EstadoCivil.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_Genero(Genero previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Asegurado.Contains(this))
            {
                previousValue.bk_tc_Asegurado.Remove(this);
            }
    
            if (bk_tc_Genero != null)
            {
                if (!bk_tc_Genero.bk_tc_Asegurado.Contains(this))
                {
                    bk_tc_Genero.bk_tc_Asegurado.Add(this);
                }
    
                GeneroID = bk_tc_Genero.GeneroID;
            }
            else if (!skipKeys)
            {
                GeneroID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_Genero")
                    && (ChangeTracker.OriginalValues["bk_tc_Genero"] == bk_tc_Genero))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_Genero");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_Genero", previousValue);
                }
                if (bk_tc_Genero != null && !bk_tc_Genero.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_Genero.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_TipoPersona(TipoPersona previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Asegurado.Contains(this))
            {
                previousValue.bk_tc_Asegurado.Remove(this);
            }
    
            if (bk_tc_TipoPersona != null)
            {
                if (!bk_tc_TipoPersona.bk_tc_Asegurado.Contains(this))
                {
                    bk_tc_TipoPersona.bk_tc_Asegurado.Add(this);
                }
    
                TipoPersonaID = bk_tc_TipoPersona.TipoPersonaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_TipoPersona")
                    && (ChangeTracker.OriginalValues["bk_tc_TipoPersona"] == bk_tc_TipoPersona))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_TipoPersona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_TipoPersona", previousValue);
                }
                if (bk_tc_TipoPersona != null && !bk_tc_TipoPersona.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_TipoPersona.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_TipoTelefono(TipoTelefono previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Asegurado.Contains(this))
            {
                previousValue.bk_tc_Asegurado.Remove(this);
            }
    
            if (bk_tc_TipoTelefono != null)
            {
                if (!bk_tc_TipoTelefono.bk_tc_Asegurado.Contains(this))
                {
                    bk_tc_TipoTelefono.bk_tc_Asegurado.Add(this);
                }
    
                TipoTelefonoID = bk_tc_TipoTelefono.TipoTelefonoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_TipoTelefono")
                    && (ChangeTracker.OriginalValues["bk_tc_TipoTelefono"] == bk_tc_TipoTelefono))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_TipoTelefono");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_TipoTelefono", previousValue);
                }
                if (bk_tc_TipoTelefono != null && !bk_tc_TipoTelefono.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_TipoTelefono.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_Usuario(Usuario previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Asegurado.Contains(this))
            {
                previousValue.bk_tc_Asegurado.Remove(this);
            }
    
            if (bk_tc_Usuario != null)
            {
                if (!bk_tc_Usuario.bk_tc_Asegurado.Contains(this))
                {
                    bk_tc_Usuario.bk_tc_Asegurado.Add(this);
                }
    
                usuarioid = bk_tc_Usuario.UsuarioID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_Usuario")
                    && (ChangeTracker.OriginalValues["bk_tc_Usuario"] == bk_tc_Usuario))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_Usuario");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_Usuario", previousValue);
                }
                if (bk_tc_Usuario != null && !bk_tc_Usuario.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_Usuario.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_Ubicacion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Ubicacion item in e.NewItems)
                {
                    item.bk_tc_Asegurado = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("bk_tc_Ubicacion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Ubicacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.bk_tc_Asegurado, this))
                    {
                        item.bk_tc_Asegurado = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("bk_tc_Ubicacion", item);
                    }
                }
            }
        }
    
        private void Fixupbk_te_Cotizacion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Cotizacion item in e.NewItems)
                {
                    item.bk_tc_Asegurado = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("bk_te_Cotizacion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Cotizacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.bk_tc_Asegurado, this))
                    {
                        item.bk_tc_Asegurado = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("bk_te_Cotizacion", item);
                    }
                }
            }
        }

        #endregion

    }
}
