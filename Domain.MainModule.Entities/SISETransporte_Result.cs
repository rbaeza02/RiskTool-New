//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using Domain.Core.Entities;

namespace Domain.MainModule.Entities
{
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 4.0")]
    #if !SILVERLIGHT
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
    #endif
    public partial class SISETransporte_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public Nullable<int> id_pv
        {
            get { return _id_pv; }
            set
            {
                if (_id_pv != value)
                {
                    OnComplexPropertyChanging();
                    _id_pv = value;
                    OnPropertyChanged("id_pv");
                }
            }
        }
        private Nullable<int> _id_pv;
    
        [DataMember]
        public int cod_item
        {
            get { return _cod_item; }
            set
            {
                if (_cod_item != value)
                {
                    OnComplexPropertyChanging();
                    _cod_item = value;
                    OnPropertyChanged("cod_item");
                }
            }
        }
        private int _cod_item;
    
        [DataMember]
        public string cod_tipo_seg
        {
            get { return _cod_tipo_seg; }
            set
            {
                if (_cod_tipo_seg != value)
                {
                    OnComplexPropertyChanging();
                    _cod_tipo_seg = value;
                    OnPropertyChanged("cod_tipo_seg");
                }
            }
        }
        private string _cod_tipo_seg;
    
        [DataMember]
        public string cod_tipo_merc
        {
            get { return _cod_tipo_merc; }
            set
            {
                if (_cod_tipo_merc != value)
                {
                    OnComplexPropertyChanging();
                    _cod_tipo_merc = value;
                    OnPropertyChanged("cod_tipo_merc");
                }
            }
        }
        private string _cod_tipo_merc;
    
        [DataMember]
        public Nullable<int> cod_medio_trans
        {
            get { return _cod_medio_trans; }
            set
            {
                if (_cod_medio_trans != value)
                {
                    OnComplexPropertyChanging();
                    _cod_medio_trans = value;
                    OnPropertyChanged("cod_medio_trans");
                }
            }
        }
        private Nullable<int> _cod_medio_trans;
    
        [DataMember]
        public string cod_origen_dest
        {
            get { return _cod_origen_dest; }
            set
            {
                if (_cod_origen_dest != value)
                {
                    OnComplexPropertyChanging();
                    _cod_origen_dest = value;
                    OnPropertyChanged("cod_origen_dest");
                }
            }
        }
        private string _cod_origen_dest;
    
        [DataMember]
        public string cod_tipo_prono
        {
            get { return _cod_tipo_prono; }
            set
            {
                if (_cod_tipo_prono != value)
                {
                    OnComplexPropertyChanging();
                    _cod_tipo_prono = value;
                    OnPropertyChanged("cod_tipo_prono");
                }
            }
        }
        private string _cod_tipo_prono;
    
        [DataMember]
        public Nullable<double> imp_pronostico
        {
            get { return _imp_pronostico; }
            set
            {
                if (_imp_pronostico != value)
                {
                    OnComplexPropertyChanging();
                    _imp_pronostico = value;
                    OnPropertyChanged("imp_pronostico");
                }
            }
        }
        private Nullable<double> _imp_pronostico;
    
        [DataMember]
        public Nullable<double> imp_prima_dep
        {
            get { return _imp_prima_dep; }
            set
            {
                if (_imp_prima_dep != value)
                {
                    OnComplexPropertyChanging();
                    _imp_prima_dep = value;
                    OnPropertyChanged("imp_prima_dep");
                }
            }
        }
        private Nullable<double> _imp_prima_dep;
    
        [DataMember]
        public Nullable<double> imp_limite_maxE
        {
            get { return _imp_limite_maxE; }
            set
            {
                if (_imp_limite_maxE != value)
                {
                    OnComplexPropertyChanging();
                    _imp_limite_maxE = value;
                    OnPropertyChanged("imp_limite_maxE");
                }
            }
        }
        private Nullable<double> _imp_limite_maxE;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, SISETransporte_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.id_pv", parentPropertyName), complexObject == null ? null : (object)complexObject.id_pv);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_item", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_item);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_tipo_seg", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_tipo_seg);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_tipo_merc", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_tipo_merc);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_medio_trans", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_medio_trans);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_origen_dest", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_origen_dest);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cod_tipo_prono", parentPropertyName), complexObject == null ? null : (object)complexObject.cod_tipo_prono);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.imp_pronostico", parentPropertyName), complexObject == null ? null : (object)complexObject.imp_pronostico);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.imp_prima_dep", parentPropertyName), complexObject == null ? null : (object)complexObject.imp_prima_dep);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.imp_limite_maxE", parentPropertyName), complexObject == null ? null : (object)complexObject.imp_limite_maxE);
        }

        #endregion

    }
}
