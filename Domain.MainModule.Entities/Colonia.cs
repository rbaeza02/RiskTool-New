//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using Domain.Core.Entities;

namespace Domain.MainModule.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Ciudad))]
    [KnownType(typeof(Municipio))]
    [KnownType(typeof(Asegurado))]
    [KnownType(typeof(Ubicacion))]
    [System.CodeDom.Compiler.GeneratedCode("STE-EF",".NET 4.0")]
    #if !SILVERLIGHT
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage()]
    #endif
    public partial class Colonia: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ColoniaID
        {
            get { return _coloniaID; }
            set
            {
                if (_coloniaID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ColoniaID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _coloniaID = value;
                    OnPropertyChanged("ColoniaID");
                }
            }
        }
        private int _coloniaID;
    
        [DataMember]
        public Nullable<int> MunicipioID
        {
            get { return _municipioID; }
            set
            {
                if (_municipioID != value)
                {
                    ChangeTracker.RecordOriginalValue("MunicipioID", _municipioID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_Municipio != null && bk_tc_Municipio.MunicipioID != value)
                        {
                            bk_tc_Municipio = null;
                        }
                    }
                    _municipioID = value;
                    OnPropertyChanged("MunicipioID");
                }
            }
        }
        private Nullable<int> _municipioID;
    
        [DataMember]
        public Nullable<int> CiudadID
        {
            get { return _ciudadID; }
            set
            {
                if (_ciudadID != value)
                {
                    ChangeTracker.RecordOriginalValue("CiudadID", _ciudadID);
                    if (!IsDeserializing)
                    {
                        if (bk_tc_Ciudad != null && bk_tc_Ciudad.CiudadID != value)
                        {
                            bk_tc_Ciudad = null;
                        }
                    }
                    _ciudadID = value;
                    OnPropertyChanged("CiudadID");
                }
            }
        }
        private Nullable<int> _ciudadID;
    
        [DataMember]
        public Nullable<int> SISEcod_colonia
        {
            get { return _sISEcod_colonia; }
            set
            {
                if (_sISEcod_colonia != value)
                {
                    _sISEcod_colonia = value;
                    OnPropertyChanged("SISEcod_colonia");
                }
            }
        }
        private Nullable<int> _sISEcod_colonia;
    
        [DataMember]
        public string Descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("Descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public string CodigoPostal
        {
            get { return _codigoPostal; }
            set
            {
                if (_codigoPostal != value)
                {
                    _codigoPostal = value;
                    OnPropertyChanged("CodigoPostal");
                }
            }
        }
        private string _codigoPostal;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Ciudad bk_tc_Ciudad
        {
            get { return _bk_tc_Ciudad; }
            set
            {
                if (!ReferenceEquals(_bk_tc_Ciudad, value))
                {
                    var previousValue = _bk_tc_Ciudad;
                    _bk_tc_Ciudad = value;
                    Fixupbk_tc_Ciudad(previousValue);
                    OnNavigationPropertyChanged("bk_tc_Ciudad");
                }
            }
        }
        private Ciudad _bk_tc_Ciudad;
    
        [DataMember]
        public Municipio bk_tc_Municipio
        {
            get { return _bk_tc_Municipio; }
            set
            {
                if (!ReferenceEquals(_bk_tc_Municipio, value))
                {
                    var previousValue = _bk_tc_Municipio;
                    _bk_tc_Municipio = value;
                    Fixupbk_tc_Municipio(previousValue);
                    OnNavigationPropertyChanged("bk_tc_Municipio");
                }
            }
        }
        private Municipio _bk_tc_Municipio;
    
        [DataMember]
        public TrackableCollection<Asegurado> bk_tc_Asegurado
        {
            get
            {
                if (_bk_tc_Asegurado == null)
                {
                    _bk_tc_Asegurado = new TrackableCollection<Asegurado>();
                    _bk_tc_Asegurado.CollectionChanged += Fixupbk_tc_Asegurado;
                }
                return _bk_tc_Asegurado;
            }
            set
            {
                if (!ReferenceEquals(_bk_tc_Asegurado, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bk_tc_Asegurado != null)
                    {
                        _bk_tc_Asegurado.CollectionChanged -= Fixupbk_tc_Asegurado;
                    }
                    _bk_tc_Asegurado = value;
                    if (_bk_tc_Asegurado != null)
                    {
                        _bk_tc_Asegurado.CollectionChanged += Fixupbk_tc_Asegurado;
                    }
                    OnNavigationPropertyChanged("bk_tc_Asegurado");
                }
            }
        }
        private TrackableCollection<Asegurado> _bk_tc_Asegurado;
    
        [DataMember]
        public TrackableCollection<Ubicacion> bk_tc_Ubicacion
        {
            get
            {
                if (_bk_tc_Ubicacion == null)
                {
                    _bk_tc_Ubicacion = new TrackableCollection<Ubicacion>();
                    _bk_tc_Ubicacion.CollectionChanged += Fixupbk_tc_Ubicacion;
                }
                return _bk_tc_Ubicacion;
            }
            set
            {
                if (!ReferenceEquals(_bk_tc_Ubicacion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bk_tc_Ubicacion != null)
                    {
                        _bk_tc_Ubicacion.CollectionChanged -= Fixupbk_tc_Ubicacion;
                    }
                    _bk_tc_Ubicacion = value;
                    if (_bk_tc_Ubicacion != null)
                    {
                        _bk_tc_Ubicacion.CollectionChanged += Fixupbk_tc_Ubicacion;
                    }
                    OnNavigationPropertyChanged("bk_tc_Ubicacion");
                }
            }
        }
        private TrackableCollection<Ubicacion> _bk_tc_Ubicacion;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            bk_tc_Ciudad = null;
            bk_tc_Municipio = null;
            bk_tc_Asegurado.Clear();
            bk_tc_Ubicacion.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void Fixupbk_tc_Ciudad(Ciudad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Colonia.Contains(this))
            {
                previousValue.bk_tc_Colonia.Remove(this);
            }
    
            if (bk_tc_Ciudad != null)
            {
                if (!bk_tc_Ciudad.bk_tc_Colonia.Contains(this))
                {
                    bk_tc_Ciudad.bk_tc_Colonia.Add(this);
                }
    
                CiudadID = bk_tc_Ciudad.CiudadID;
            }
            else if (!skipKeys)
            {
                CiudadID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_Ciudad")
                    && (ChangeTracker.OriginalValues["bk_tc_Ciudad"] == bk_tc_Ciudad))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_Ciudad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_Ciudad", previousValue);
                }
                if (bk_tc_Ciudad != null && !bk_tc_Ciudad.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_Ciudad.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_Municipio(Municipio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.bk_tc_Colonia.Contains(this))
            {
                previousValue.bk_tc_Colonia.Remove(this);
            }
    
            if (bk_tc_Municipio != null)
            {
                if (!bk_tc_Municipio.bk_tc_Colonia.Contains(this))
                {
                    bk_tc_Municipio.bk_tc_Colonia.Add(this);
                }
    
                MunicipioID = bk_tc_Municipio.MunicipioID;
            }
            else if (!skipKeys)
            {
                MunicipioID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("bk_tc_Municipio")
                    && (ChangeTracker.OriginalValues["bk_tc_Municipio"] == bk_tc_Municipio))
                {
                    ChangeTracker.OriginalValues.Remove("bk_tc_Municipio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("bk_tc_Municipio", previousValue);
                }
                if (bk_tc_Municipio != null && !bk_tc_Municipio.ChangeTracker.ChangeTrackingEnabled)
                {
                    bk_tc_Municipio.StartTracking();
                }
            }
        }
    
        private void Fixupbk_tc_Asegurado(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Asegurado item in e.NewItems)
                {
                    item.bk_tc_Colonia = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("bk_tc_Asegurado", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Asegurado item in e.OldItems)
                {
                    if (ReferenceEquals(item.bk_tc_Colonia, this))
                    {
                        item.bk_tc_Colonia = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("bk_tc_Asegurado", item);
                    }
                }
            }
        }
    
        private void Fixupbk_tc_Ubicacion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Ubicacion item in e.NewItems)
                {
                    item.bk_tc_Colonia = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("bk_tc_Ubicacion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Ubicacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.bk_tc_Colonia, this))
                    {
                        item.bk_tc_Colonia = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("bk_tc_Ubicacion", item);
                    }
                }
            }
        }

        #endregion

    }
}
