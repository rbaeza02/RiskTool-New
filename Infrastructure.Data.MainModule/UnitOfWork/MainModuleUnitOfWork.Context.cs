//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;



using Domain.Core.Entities;
using Domain.Core;
using Domain.MainModule.Entities;
using System.Reflection;

namespace Infrastructure.Data.MainModule.UnitOfWork
{
    [System.Diagnostics.DebuggerNonUserCode()]
    public partial class MainModuleUnitOfWork : ObjectContext,IMainModuleUnitOfWork
    {
        public const string ConnectionString = "name=MainModuleUnitOfWork";
        public const string ContainerName = "MainModuleUnitOfWork";
    
        #region Constructors
    	
        public MainModuleUnitOfWork()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public MainModuleUnitOfWork(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public MainModuleUnitOfWork(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
    		ContextOptions.LazyLoadingEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
        #region IMainModuleUnitOfWork
    	
    	public  IObjectSet<TEntity> CreateSet<TEntity>() 
    		where TEntity : class,IObjectWithChangeTracker
    	{
    		return base.CreateObjectSet<TEntity>() as IObjectSet<TEntity>;
    	}
    	public void RegisterChanges<TEntity>(TEntity item)
    		where TEntity : class, IObjectWithChangeTracker
    	{
    		this.CreateObjectSet<TEntity>().ApplyChanges(item);
    	}
    	public void CommitAndRefreshChanges()
    	{
    		try
    		{
    			//Default option is DetectChangesBeforeSave
    			base.SaveChanges();
    			
    			//accept all changes in STE entities attached in context
                IEnumerable<IObjectWithChangeTracker> steEntities = (from entry in 
    																	this.ObjectStateManager.GetObjectStateEntries(~EntityState.Detached)
                                                                     where 
    																 	entry.Entity != null 
    																 && 
    																 	(entry.Entity as IObjectWithChangeTracker != null)
                                                                     select
    																 	entry.Entity as IObjectWithChangeTracker);
    
                steEntities.ToList().ForEach(ste => ste.MarkAsUnchanged());
    		}
    		catch (OptimisticConcurrencyException ex)
    		{
    			
    			//if client wins refresh data ( queries database and adapt original values
    			//and re-save changes in client
    			base.Refresh(RefreshMode.ClientWins, ex.StateEntries.Select(se => se.Entity));
    			
    			base.SaveChanges(); 
    			
    			//accept all changes in STE entities attached in context
                IEnumerable<IObjectWithChangeTracker> steEntities = (from entry in 
    																	this.ObjectStateManager.GetObjectStateEntries(~EntityState.Detached)
                                                                     where 
    																 	entry.Entity != null 
    																 && 
    																 	(entry.Entity as IObjectWithChangeTracker != null)
                                                                     select
    																 	entry.Entity as IObjectWithChangeTracker);
    
                steEntities.ToList().ForEach(ste => ste.MarkAsUnchanged());
    		}
    	}
    	public  void Commit()
    	{
    		//Default option is DetectChangesBeforeSave
    		base.SaveChanges();
    		
    		//accept all changes in STE entities attached in context
    		IEnumerable<IObjectWithChangeTracker> steEntities = (from entry in 
    																	this.ObjectStateManager.GetObjectStateEntries(~EntityState.Detached)
                                                                     where 
    																 	entry.Entity != null 
    																 && 
    																 	(entry.Entity as IObjectWithChangeTracker != null)
                                                                     select
    																 	entry.Entity as IObjectWithChangeTracker);
    
    		steEntities.ToList().ForEach(ste => ste.MarkAsUnchanged());
    	}
    	public void RollbackChanges()
    	{
    		//Refresh context and override changes
                
    		IEnumerable<object> itemsToRefresh = base.ObjectStateManager.GetObjectStateEntries(EntityState.Modified)
                                                                        .Where(ose=>!ose.IsRelationship && ose.Entity != null)
                                                                        .Select(ose=>ose.Entity);
            base.Refresh(RefreshMode.StoreWins, itemsToRefresh);
    	}
    	public IEnumerable<TEntity> ExecuteQuery<TEntity>(string sqlQuery, params object[] parameters)
        {
    		return base.ExecuteStoreQuery<TEntity>(sqlQuery, parameters);
       	}
    
    	public int ExecuteCommand(string sqlCommand, params object[] parameters)
    	{
    		return base.ExecuteStoreCommand(sqlCommand, parameters);
    	}
    	

        #endregion

        #region ObjectSet Properties
    
        public IObjectSet<Ciudad> Ciudades
        {
            get { return _ciudades  ?? (_ciudades = CreateObjectSet<Ciudad>("Ciudades")); }
        }
        private ObjectSet<Ciudad> _ciudades;
    
        public IObjectSet<Estado> Estados
        {
            get { return _estados  ?? (_estados = CreateObjectSet<Estado>("Estados")); }
        }
        private ObjectSet<Estado> _estados;
    
        public IObjectSet<Municipio> Municipios
        {
            get { return _municipios  ?? (_municipios = CreateObjectSet<Municipio>("Municipios")); }
        }
        private ObjectSet<Municipio> _municipios;
    
        public IObjectSet<Pais> Paises
        {
            get { return _paises  ?? (_paises = CreateObjectSet<Pais>("Paises")); }
        }
        private ObjectSet<Pais> _paises;
    
        public IObjectSet<FormaPago> FormaPagos
        {
            get { return _formaPagos  ?? (_formaPagos = CreateObjectSet<FormaPago>("FormaPagos")); }
        }
        private ObjectSet<FormaPago> _formaPagos;
    
        public IObjectSet<Moneda> Monedas
        {
            get { return _monedas  ?? (_monedas = CreateObjectSet<Moneda>("Monedas")); }
        }
        private ObjectSet<Moneda> _monedas;
    
        public IObjectSet<EstadoCivil> EstadoCiviles
        {
            get { return _estadoCiviles  ?? (_estadoCiviles = CreateObjectSet<EstadoCivil>("EstadoCiviles")); }
        }
        private ObjectSet<EstadoCivil> _estadoCiviles;
    
        public IObjectSet<Genero> Generos
        {
            get { return _generos  ?? (_generos = CreateObjectSet<Genero>("Generos")); }
        }
        private ObjectSet<Genero> _generos;
    
        public IObjectSet<Colonia> Colonias
        {
            get { return _colonias  ?? (_colonias = CreateObjectSet<Colonia>("Colonias")); }
        }
        private ObjectSet<Colonia> _colonias;
    
        public IObjectSet<TipoPersona> TipoPersonas
        {
            get { return _tipoPersonas  ?? (_tipoPersonas = CreateObjectSet<TipoPersona>("TipoPersonas")); }
        }
        private ObjectSet<TipoPersona> _tipoPersonas;
    
        public IObjectSet<TipoTelefono> TipoTelefonos
        {
            get { return _tipoTelefonos  ?? (_tipoTelefonos = CreateObjectSet<TipoTelefono>("TipoTelefonos")); }
        }
        private ObjectSet<TipoTelefono> _tipoTelefonos;
    
        public IObjectSet<Usuario> Usuarios
        {
            get { return _usuarios  ?? (_usuarios = CreateObjectSet<Usuario>("Usuarios")); }
        }
        private ObjectSet<Usuario> _usuarios;
    
        public IObjectSet<Asegurado> Asegurados
        {
            get { return _asegurados  ?? (_asegurados = CreateObjectSet<Asegurado>("Asegurados")); }
        }
        private ObjectSet<Asegurado> _asegurados;
    
        public IObjectSet<TipoConstructivoIncendio> TipoConstructivoIncendios
        {
            get { return _tipoConstructivoIncendios  ?? (_tipoConstructivoIncendios = CreateObjectSet<TipoConstructivoIncendio>("TipoConstructivoIncendios")); }
        }
        private ObjectSet<TipoConstructivoIncendio> _tipoConstructivoIncendios;
    
        public IObjectSet<ZonaHidro> ZonaHidros
        {
            get { return _zonaHidros  ?? (_zonaHidros = CreateObjectSet<ZonaHidro>("ZonaHidros")); }
        }
        private ObjectSet<ZonaHidro> _zonaHidros;
    
        public IObjectSet<ZonaTEV> ZonaTEVs
        {
            get { return _zonaTEVs  ?? (_zonaTEVs = CreateObjectSet<ZonaTEV>("ZonaTEVs")); }
        }
        private ObjectSet<ZonaTEV> _zonaTEVs;
    
        public IObjectSet<TipoOperacion> TipoOperaciones
        {
            get { return _tipoOperaciones  ?? (_tipoOperaciones = CreateObjectSet<TipoOperacion>("TipoOperaciones")); }
        }
        private ObjectSet<TipoOperacion> _tipoOperaciones;
    
        public IObjectSet<Cobertura> Coberturas
        {
            get { return _coberturas  ?? (_coberturas = CreateObjectSet<Cobertura>("Coberturas")); }
        }
        private ObjectSet<Cobertura> _coberturas;
    
        public IObjectSet<LineaNegocio> LineaNegocios
        {
            get { return _lineaNegocios  ?? (_lineaNegocios = CreateObjectSet<LineaNegocio>("LineaNegocios")); }
        }
        private ObjectSet<LineaNegocio> _lineaNegocios;
    
        public IObjectSet<SIC> SICs
        {
            get { return _sICs  ?? (_sICs = CreateObjectSet<SIC>("SICs")); }
        }
        private ObjectSet<SIC> _sICs;
    
        public IObjectSet<SICDivision> SICDivisiones
        {
            get { return _sICDivisiones  ?? (_sICDivisiones = CreateObjectSet<SICDivision>("SICDivisiones")); }
        }
        private ObjectSet<SICDivision> _sICDivisiones;
    
        public IObjectSet<SICGrupo> SICGrupos
        {
            get { return _sICGrupos  ?? (_sICGrupos = CreateObjectSet<SICGrupo>("SICGrupos")); }
        }
        private ObjectSet<SICGrupo> _sICGrupos;
    
        public IObjectSet<TipoConstructivoTerremoto> TipoConstructivoTerremotos
        {
            get { return _tipoConstructivoTerremotos  ?? (_tipoConstructivoTerremotos = CreateObjectSet<TipoConstructivoTerremoto>("TipoConstructivoTerremotos")); }
        }
        private ObjectSet<TipoConstructivoTerremoto> _tipoConstructivoTerremotos;
    
        public IObjectSet<Sucursal> Sucursales
        {
            get { return _sucursales  ?? (_sucursales = CreateObjectSet<Sucursal>("Sucursales")); }
        }
        private ObjectSet<Sucursal> _sucursales;
    
        public IObjectSet<Agente> Agentes
        {
            get { return _agentes  ?? (_agentes = CreateObjectSet<Agente>("Agentes")); }
        }
        private ObjectSet<Agente> _agentes;
    
        public IObjectSet<Contacto> Contactos
        {
            get { return _contactos  ?? (_contactos = CreateObjectSet<Contacto>("Contactos")); }
        }
        private ObjectSet<Contacto> _contactos;
    
        public IObjectSet<CotizacionCoberturaUbi> CotizacionCoberturaUbis
        {
            get { return _cotizacionCoberturaUbis  ?? (_cotizacionCoberturaUbis = CreateObjectSet<CotizacionCoberturaUbi>("CotizacionCoberturaUbis")); }
        }
        private ObjectSet<CotizacionCoberturaUbi> _cotizacionCoberturaUbis;
    
        public IObjectSet<CotizacionSubLineaUbi> CotizacionSubLineaUbis
        {
            get { return _cotizacionSubLineaUbis  ?? (_cotizacionSubLineaUbis = CreateObjectSet<CotizacionSubLineaUbi>("CotizacionSubLineaUbis")); }
        }
        private ObjectSet<CotizacionSubLineaUbi> _cotizacionSubLineaUbis;
    
        public IObjectSet<Exposicion> Exposiciones
        {
            get { return _exposiciones  ?? (_exposiciones = CreateObjectSet<Exposicion>("Exposiciones")); }
        }
        private ObjectSet<Exposicion> _exposiciones;
    
        public IObjectSet<GradoExposicion> GradoExposiciones
        {
            get { return _gradoExposiciones  ?? (_gradoExposiciones = CreateObjectSet<GradoExposicion>("GradoExposiciones")); }
        }
        private ObjectSet<GradoExposicion> _gradoExposiciones;
    
        public IObjectSet<GrupoIncendio> GrupoIncendios
        {
            get { return _grupoIncendios  ?? (_grupoIncendios = CreateObjectSet<GrupoIncendio>("GrupoIncendios")); }
        }
        private ObjectSet<GrupoIncendio> _grupoIncendios;
    
        public IObjectSet<ProteccionPrivada> ProteccionPrivadas
        {
            get { return _proteccionPrivadas  ?? (_proteccionPrivadas = CreateObjectSet<ProteccionPrivada>("ProteccionPrivadas")); }
        }
        private ObjectSet<ProteccionPrivada> _proteccionPrivadas;
    
        public IObjectSet<ProteccionPublica> ProteccionPublicas
        {
            get { return _proteccionPublicas  ?? (_proteccionPublicas = CreateObjectSet<ProteccionPublica>("ProteccionPublicas")); }
        }
        private ObjectSet<ProteccionPublica> _proteccionPublicas;
    
        public IObjectSet<CotizacionTipoCobertura> CotizacionTipoCoberturas
        {
            get { return _cotizacionTipoCoberturas  ?? (_cotizacionTipoCoberturas = CreateObjectSet<CotizacionTipoCobertura>("CotizacionTipoCoberturas")); }
        }
        private ObjectSet<CotizacionTipoCobertura> _cotizacionTipoCoberturas;
    
        public IObjectSet<CotizacionSubLineaNegocio> CotizacionSubLineaNegocios
        {
            get { return _cotizacionSubLineaNegocios  ?? (_cotizacionSubLineaNegocios = CreateObjectSet<CotizacionSubLineaNegocio>("CotizacionSubLineaNegocios")); }
        }
        private ObjectSet<CotizacionSubLineaNegocio> _cotizacionSubLineaNegocios;
    
        public IObjectSet<CotizacionAnuncio> CotizacionAnuncios
        {
            get { return _cotizacionAnuncios  ?? (_cotizacionAnuncios = CreateObjectSet<CotizacionAnuncio>("CotizacionAnuncios")); }
        }
        private ObjectSet<CotizacionAnuncio> _cotizacionAnuncios;
    
        public IObjectSet<CotizacionCristal> CotizacionCristales
        {
            get { return _cotizacionCristales  ?? (_cotizacionCristales = CreateObjectSet<CotizacionCristal>("CotizacionCristales")); }
        }
        private ObjectSet<CotizacionCristal> _cotizacionCristales;
    
        public IObjectSet<CotizacionRobo> CotizacionRobos
        {
            get { return _cotizacionRobos  ?? (_cotizacionRobos = CreateObjectSet<CotizacionRobo>("CotizacionRobos")); }
        }
        private ObjectSet<CotizacionRobo> _cotizacionRobos;
    
        public IObjectSet<CotizacionCaldera> CotizacionCalderas
        {
            get { return _cotizacionCalderas  ?? (_cotizacionCalderas = CreateObjectSet<CotizacionCaldera>("CotizacionCalderas")); }
        }
        private ObjectSet<CotizacionCaldera> _cotizacionCalderas;
    
        public IObjectSet<CotizacionCalderaPC> CotizacionCalderaPCs
        {
            get { return _cotizacionCalderaPCs  ?? (_cotizacionCalderaPCs = CreateObjectSet<CotizacionCalderaPC>("CotizacionCalderaPCs")); }
        }
        private ObjectSet<CotizacionCalderaPC> _cotizacionCalderaPCs;
    
        public IObjectSet<CotizacionDinVal> CotizacionDinVals
        {
            get { return _cotizacionDinVals  ?? (_cotizacionDinVals = CreateObjectSet<CotizacionDinVal>("CotizacionDinVals")); }
        }
        private ObjectSet<CotizacionDinVal> _cotizacionDinVals;
    
        public IObjectSet<CotizacionEqContratista> CotizacionEqContratistas
        {
            get { return _cotizacionEqContratistas  ?? (_cotizacionEqContratistas = CreateObjectSet<CotizacionEqContratista>("CotizacionEqContratistas")); }
        }
        private ObjectSet<CotizacionEqContratista> _cotizacionEqContratistas;
    
        public IObjectSet<CotizacionEqElec> CotizacionEqElecs
        {
            get { return _cotizacionEqElecs  ?? (_cotizacionEqElecs = CreateObjectSet<CotizacionEqElec>("CotizacionEqElecs")); }
        }
        private ObjectSet<CotizacionEqElec> _cotizacionEqElecs;
    
        public IObjectSet<CotizacionEqElecCostoOper> CotizacionEqElecCostoOpers
        {
            get { return _cotizacionEqElecCostoOpers  ?? (_cotizacionEqElecCostoOpers = CreateObjectSet<CotizacionEqElecCostoOper>("CotizacionEqElecCostoOpers")); }
        }
        private ObjectSet<CotizacionEqElecCostoOper> _cotizacionEqElecCostoOpers;
    
        public IObjectSet<CotizacionEqElecMovil> CotizacionEqElecMoviles
        {
            get { return _cotizacionEqElecMoviles  ?? (_cotizacionEqElecMoviles = CreateObjectSet<CotizacionEqElecMovil>("CotizacionEqElecMoviles")); }
        }
        private ObjectSet<CotizacionEqElecMovil> _cotizacionEqElecMoviles;
    
        public IObjectSet<CotizacionEqElecPortExt> CotizacionEqElecPortExts
        {
            get { return _cotizacionEqElecPortExts  ?? (_cotizacionEqElecPortExts = CreateObjectSet<CotizacionEqElecPortExt>("CotizacionEqElecPortExts")); }
        }
        private ObjectSet<CotizacionEqElecPortExt> _cotizacionEqElecPortExts;
    
        public IObjectSet<CotizacionRCEstacionamiento> CotizacionRCEstacionamientos
        {
            get { return _cotizacionRCEstacionamientos  ?? (_cotizacionRCEstacionamientos = CreateObjectSet<CotizacionRCEstacionamiento>("CotizacionRCEstacionamientos")); }
        }
        private ObjectSet<CotizacionRCEstacionamiento> _cotizacionRCEstacionamientos;
    
        public IObjectSet<CotizacionRCTrabajoTerm> CotizacionRCTrabajoTerms
        {
            get { return _cotizacionRCTrabajoTerms  ?? (_cotizacionRCTrabajoTerms = CreateObjectSet<CotizacionRCTrabajoTerm>("CotizacionRCTrabajoTerms")); }
        }
        private ObjectSet<CotizacionRCTrabajoTerm> _cotizacionRCTrabajoTerms;
    
        public IObjectSet<CotizacionRotMaq> CotizacionRotMaqs
        {
            get { return _cotizacionRotMaqs  ?? (_cotizacionRotMaqs = CreateObjectSet<CotizacionRotMaq>("CotizacionRotMaqs")); }
        }
        private ObjectSet<CotizacionRotMaq> _cotizacionRotMaqs;
    
        public IObjectSet<CotizacionRotMaqPC> CotizacionRotMaqPCs
        {
            get { return _cotizacionRotMaqPCs  ?? (_cotizacionRotMaqPCs = CreateObjectSet<CotizacionRotMaqPC>("CotizacionRotMaqPCs")); }
        }
        private ObjectSet<CotizacionRotMaqPC> _cotizacionRotMaqPCs;
    
        public IObjectSet<CotizacionRCTaller> CotizacionRCTalleres
        {
            get { return _cotizacionRCTalleres  ?? (_cotizacionRCTalleres = CreateObjectSet<CotizacionRCTaller>("CotizacionRCTalleres")); }
        }
        private ObjectSet<CotizacionRCTaller> _cotizacionRCTalleres;
    
        public IObjectSet<CotizacionRCProductoExtPais> CotizacionRCProductoExtPaises
        {
            get { return _cotizacionRCProductoExtPaises  ?? (_cotizacionRCProductoExtPaises = CreateObjectSet<CotizacionRCProductoExtPais>("CotizacionRCProductoExtPaises")); }
        }
        private ObjectSet<CotizacionRCProductoExtPais> _cotizacionRCProductoExtPaises;
    
        public IObjectSet<SICClassMap> SICClassMaps
        {
            get { return _sICClassMaps  ?? (_sICClassMaps = CreateObjectSet<SICClassMap>("SICClassMaps")); }
        }
        private ObjectSet<SICClassMap> _sICClassMaps;
    
        public IObjectSet<TransCondicion> TransCondiciones
        {
            get { return _transCondiciones  ?? (_transCondiciones = CreateObjectSet<TransCondicion>("TransCondiciones")); }
        }
        private ObjectSet<TransCondicion> _transCondiciones;
    
        public IObjectSet<IncGeneralInf> IncGeneralInfs
        {
            get { return _incGeneralInfs  ?? (_incGeneralInfs = CreateObjectSet<IncGeneralInf>("IncGeneralInfs")); }
        }
        private ObjectSet<IncGeneralInf> _incGeneralInfs;
    
        public IObjectSet<IncCOPE> IncCOPEs
        {
            get { return _incCOPEs  ?? (_incCOPEs = CreateObjectSet<IncCOPE>("IncCOPEs")); }
        }
        private ObjectSet<IncCOPE> _incCOPEs;
    
        public IObjectSet<IncASAreaFuego> IncASAreaFuegos
        {
            get { return _incASAreaFuegos  ?? (_incASAreaFuegos = CreateObjectSet<IncASAreaFuego>("IncASAreaFuegos")); }
        }
        private ObjectSet<IncASAreaFuego> _incASAreaFuegos;
    
        public IObjectSet<IncAS> IncASs
        {
            get { return _incASs  ?? (_incASs = CreateObjectSet<IncAS>("IncASs")); }
        }
        private ObjectSet<IncAS> _incASs;
    
        public IObjectSet<workflow> workflows
        {
            get { return _workflows  ?? (_workflows = CreateObjectSet<workflow>("workflows")); }
        }
        private ObjectSet<workflow> _workflows;
    
        public IObjectSet<LazCasualty> LazCasualties
        {
            get { return _lazCasualties  ?? (_lazCasualties = CreateObjectSet<LazCasualty>("LazCasualties")); }
        }
        private ObjectSet<LazCasualty> _lazCasualties;
    
        public IObjectSet<Rol> Roles
        {
            get { return _roles  ?? (_roles = CreateObjectSet<Rol>("Roles")); }
        }
        private ObjectSet<Rol> _roles;
    
        public IObjectSet<CotizacionUbicacion> CotizacionUbicaciones
        {
            get { return _cotizacionUbicaciones  ?? (_cotizacionUbicaciones = CreateObjectSet<CotizacionUbicacion>("CotizacionUbicaciones")); }
        }
        private ObjectSet<CotizacionUbicacion> _cotizacionUbicaciones;
    
        public IObjectSet<Ubicacion> Ubicaciones
        {
            get { return _ubicaciones  ?? (_ubicaciones = CreateObjectSet<Ubicacion>("Ubicaciones")); }
        }
        private ObjectSet<Ubicacion> _ubicaciones;
    
        public IObjectSet<TipoCobertura> TipoCoberturas
        {
            get { return _tipoCoberturas  ?? (_tipoCoberturas = CreateObjectSet<TipoCobertura>("TipoCoberturas")); }
        }
        private ObjectSet<TipoCobertura> _tipoCoberturas;
    
        public IObjectSet<Texto> Textos
        {
            get { return _textos  ?? (_textos = CreateObjectSet<Texto>("Textos")); }
        }
        private ObjectSet<Texto> _textos;
    
        public IObjectSet<SubLineaNegocio> SubLineaNegocios
        {
            get { return _subLineaNegocios  ?? (_subLineaNegocios = CreateObjectSet<SubLineaNegocio>("SubLineaNegocios")); }
        }
        private ObjectSet<SubLineaNegocio> _subLineaNegocios;
    
        public IObjectSet<UsuarioSubLinea> UsuarioSubLineas
        {
            get { return _usuarioSubLineas  ?? (_usuarioSubLineas = CreateObjectSet<UsuarioSubLinea>("UsuarioSubLineas")); }
        }
        private ObjectSet<UsuarioSubLinea> _usuarioSubLineas;
    
        public IObjectSet<CotizacionRCRecall> CotizacionRCRecalls
        {
            get { return _cotizacionRCRecalls  ?? (_cotizacionRCRecalls = CreateObjectSet<CotizacionRCRecall>("CotizacionRCRecalls")); }
        }
        private ObjectSet<CotizacionRCRecall> _cotizacionRCRecalls;
    
        public IObjectSet<CotizacionLog> CotizacionLogs
        {
            get { return _cotizacionLogs  ?? (_cotizacionLogs = CreateObjectSet<CotizacionLog>("CotizacionLogs")); }
        }
        private ObjectSet<CotizacionLog> _cotizacionLogs;
    
        public IObjectSet<CotizacionRCEqContratista> CotizacionRCEqContratistas
        {
            get { return _cotizacionRCEqContratistas  ?? (_cotizacionRCEqContratistas = CreateObjectSet<CotizacionRCEqContratista>("CotizacionRCEqContratistas")); }
        }
        private ObjectSet<CotizacionRCEqContratista> _cotizacionRCEqContratistas;
    
        public IObjectSet<Accion> Acciones
        {
            get { return _acciones  ?? (_acciones = CreateObjectSet<Accion>("Acciones")); }
        }
        private ObjectSet<Accion> _acciones;
    
        public IObjectSet<Cotizacion> Cotizaciones
        {
            get { return _cotizaciones  ?? (_cotizaciones = CreateObjectSet<Cotizacion>("Cotizaciones")); }
        }
        private ObjectSet<Cotizacion> _cotizaciones;
    
        public IObjectSet<CotizacionDeducible> CotizacionDeducibles
        {
            get { return _cotizacionDeducibles  ?? (_cotizacionDeducibles = CreateObjectSet<CotizacionDeducible>("CotizacionDeducibles")); }
        }
        private ObjectSet<CotizacionDeducible> _cotizacionDeducibles;
    
        public IObjectSet<EqContratistaEquipo> EqContratistaEquipos
        {
            get { return _eqContratistaEquipos  ?? (_eqContratistaEquipos = CreateObjectSet<EqContratistaEquipo>("EqContratistaEquipos")); }
        }
        private ObjectSet<EqContratistaEquipo> _eqContratistaEquipos;
    
        public IObjectSet<Tarifa> Tarifas
        {
            get { return _tarifas  ?? (_tarifas = CreateObjectSet<Tarifa>("Tarifas")); }
        }
        private ObjectSet<Tarifa> _tarifas;
    
        public IObjectSet<Persona> Personas
        {
            get { return _personas  ?? (_personas = CreateObjectSet<Persona>("Personas")); }
        }
        private ObjectSet<Persona> _personas;
    
        public IObjectSet<CotizacionTransConceptoEvaluacion> CotizacionTransConceptoEvaluaciones
        {
            get { return _cotizacionTransConceptoEvaluaciones  ?? (_cotizacionTransConceptoEvaluaciones = CreateObjectSet<CotizacionTransConceptoEvaluacion>("CotizacionTransConceptoEvaluaciones")); }
        }
        private ObjectSet<CotizacionTransConceptoEvaluacion> _cotizacionTransConceptoEvaluaciones;
    
        public IObjectSet<TransConceptoEval> TransConceptoEvals
        {
            get { return _transConceptoEvals  ?? (_transConceptoEvals = CreateObjectSet<TransConceptoEval>("TransConceptoEvals")); }
        }
        private ObjectSet<TransConceptoEval> _transConceptoEvals;
    
        public IObjectSet<CotizacionPagador> CotizacionPagadores
        {
            get { return _cotizacionPagadores  ?? (_cotizacionPagadores = CreateObjectSet<CotizacionPagador>("CotizacionPagadores")); }
        }
        private ObjectSet<CotizacionPagador> _cotizacionPagadores;
    
        public IObjectSet<CotizacionRCProductoExt> CotizacionRCProductoExts
        {
            get { return _cotizacionRCProductoExts  ?? (_cotizacionRCProductoExts = CreateObjectSet<CotizacionRCProductoExt>("CotizacionRCProductoExts")); }
        }
        private ObjectSet<CotizacionRCProductoExt> _cotizacionRCProductoExts;
    
        public IObjectSet<CotizacionRCProductoExtResultado> CotizacionRCProductoExtResultados
        {
            get { return _cotizacionRCProductoExtResultados  ?? (_cotizacionRCProductoExtResultados = CreateObjectSet<CotizacionRCProductoExtResultado>("CotizacionRCProductoExtResultados")); }
        }
        private ObjectSet<CotizacionRCProductoExtResultado> _cotizacionRCProductoExtResultados;
    
        public IObjectSet<CotizacionRCHoteleria> CotizacionRCHotelerias
        {
            get { return _cotizacionRCHotelerias  ?? (_cotizacionRCHotelerias = CreateObjectSet<CotizacionRCHoteleria>("CotizacionRCHotelerias")); }
        }
        private ObjectSet<CotizacionRCHoteleria> _cotizacionRCHotelerias;
    
        public IObjectSet<CotizacionRCVehiculoExc> CotizacionRCVehiculoExcs
        {
            get { return _cotizacionRCVehiculoExcs  ?? (_cotizacionRCVehiculoExcs = CreateObjectSet<CotizacionRCVehiculoExc>("CotizacionRCVehiculoExcs")); }
        }
        private ObjectSet<CotizacionRCVehiculoExc> _cotizacionRCVehiculoExcs;
    
        public IObjectSet<CotizacionRCConstruccion> CotizacionRCConstrucciones
        {
            get { return _cotizacionRCConstrucciones  ?? (_cotizacionRCConstrucciones = CreateObjectSet<CotizacionRCConstruccion>("CotizacionRCConstrucciones")); }
        }
        private ObjectSet<CotizacionRCConstruccion> _cotizacionRCConstrucciones;
    
        public IObjectSet<CotizacionRCActInm> CotizacionRCActInms
        {
            get { return _cotizacionRCActInms  ?? (_cotizacionRCActInms = CreateObjectSet<CotizacionRCActInm>("CotizacionRCActInms")); }
        }
        private ObjectSet<CotizacionRCActInm> _cotizacionRCActInms;
    
        public IObjectSet<CotizacionTrans> CotizacionTransportes
        {
            get { return _cotizacionTransportes  ?? (_cotizacionTransportes = CreateObjectSet<CotizacionTrans>("CotizacionTransportes")); }
        }
        private ObjectSet<CotizacionTrans> _cotizacionTransportes;
    
        public IObjectSet<CotizacionRCAdicional> CotizacionRCAdicionales
        {
            get { return _cotizacionRCAdicionales  ?? (_cotizacionRCAdicionales = CreateObjectSet<CotizacionRCAdicional>("CotizacionRCAdicionales")); }
        }
        private ObjectSet<CotizacionRCAdicional> _cotizacionRCAdicionales;

        #endregion

        #region Function Imports
        public virtual ObjectResult<SelectCodigoPostalDatos_Result> SelectCodigoPostalDatos(string codigoPostal)
        {
    
            ObjectParameter codigoPostalParameter;
    
            if (codigoPostal != null)
            {
                codigoPostalParameter = new ObjectParameter("CodigoPostal", codigoPostal);
            }
            else
            {
                codigoPostalParameter = new ObjectParameter("CodigoPostal", typeof(string));
            }
            return base.ExecuteFunction<SelectCodigoPostalDatos_Result>("SelectCodigoPostalDatos", codigoPostalParameter);
        }
        public virtual ObjectResult<SelectCotizacionPresentacion_Result> SelectCotizacionPresentacion(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectCotizacionPresentacion_Result>("SelectCotizacionPresentacion", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectPrimasPresentacion_Result> SelectPrimasPresentacion(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectPrimasPresentacion_Result>("SelectPrimasPresentacion", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectResumenPresentacion_Result> SelectResumenPresentacion(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectResumenPresentacion_Result>("SelectResumenPresentacion", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectTextosPrimaPresentacion_Result> SelectTextosPrimaPresentacion(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectTextosPrimaPresentacion_Result>("SelectTextosPrimaPresentacion", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectPresentacionTransporte_Result> SelectPresentacionTransporte(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectPresentacionTransporte_Result>("SelectPresentacionTransporte", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectAdjustedRateRang_Result> SelectAdjustedRateRang(Nullable<int> rCRecallCategoryID, Nullable<int> rCRecallExposureTypeID, Nullable<int> rCRecallLimitID)
        {
    
            ObjectParameter rCRecallCategoryIDParameter;
    
            if (rCRecallCategoryID.HasValue)
            {
                rCRecallCategoryIDParameter = new ObjectParameter("RCRecallCategoryID", rCRecallCategoryID);
            }
            else
            {
                rCRecallCategoryIDParameter = new ObjectParameter("RCRecallCategoryID", typeof(int));
            }
    
            ObjectParameter rCRecallExposureTypeIDParameter;
    
            if (rCRecallExposureTypeID.HasValue)
            {
                rCRecallExposureTypeIDParameter = new ObjectParameter("RCRecallExposureTypeID", rCRecallExposureTypeID);
            }
            else
            {
                rCRecallExposureTypeIDParameter = new ObjectParameter("RCRecallExposureTypeID", typeof(int));
            }
    
            ObjectParameter rCRecallLimitIDParameter;
    
            if (rCRecallLimitID.HasValue)
            {
                rCRecallLimitIDParameter = new ObjectParameter("RCRecallLimitID", rCRecallLimitID);
            }
            else
            {
                rCRecallLimitIDParameter = new ObjectParameter("RCRecallLimitID", typeof(int));
            }
            return base.ExecuteFunction<SelectAdjustedRateRang_Result>("SelectAdjustedRateRang", rCRecallCategoryIDParameter, rCRecallExposureTypeIDParameter, rCRecallLimitIDParameter);
        }
        public virtual ObjectResult<SelectRiskReportCOPE_Result> SelectRiskReportCOPE(Nullable<int> cotizacionid)
        {
    
            ObjectParameter cotizacionidParameter;
    
            if (cotizacionid.HasValue)
            {
                cotizacionidParameter = new ObjectParameter("cotizacionid", cotizacionid);
            }
            else
            {
                cotizacionidParameter = new ObjectParameter("cotizacionid", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskReportCOPE_Result>("SelectRiskReportCOPE", cotizacionidParameter);
        }
        public virtual ObjectResult<SelectRiskReportGeneralInformation_Result> SelectRiskReportGeneralInformation(Nullable<int> cotizacionid)
        {
    
            ObjectParameter cotizacionidParameter;
    
            if (cotizacionid.HasValue)
            {
                cotizacionidParameter = new ObjectParameter("cotizacionid", cotizacionid);
            }
            else
            {
                cotizacionidParameter = new ObjectParameter("cotizacionid", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskReportGeneralInformation_Result>("SelectRiskReportGeneralInformation", cotizacionidParameter);
        }
        public virtual ObjectResult<SelectRiskReportUbicaciones_Result> SelectRiskReportUbicaciones(Nullable<int> cotizacionid)
        {
    
            ObjectParameter cotizacionidParameter;
    
            if (cotizacionid.HasValue)
            {
                cotizacionidParameter = new ObjectParameter("cotizacionid", cotizacionid);
            }
            else
            {
                cotizacionidParameter = new ObjectParameter("cotizacionid", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskReportUbicaciones_Result>("SelectRiskReportUbicaciones", cotizacionidParameter);
        }
        public virtual ObjectResult<SelectPagina_Result> SelectPagina(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectPagina_Result>("SelectPagina", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectRiskReportTransporte_Result> SelectRiskReportTransporte(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskReportTransporte_Result>("SelectRiskReportTransporte", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectRiskReportASAreaInc_Result> SelectRiskReportASAreaInc(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskReportASAreaInc_Result>("SelectRiskReportASAreaInc", cotizacionIDParameter);
        }
        public virtual ObjectResult<UpdateCotizacionTransporte_Result> UpdateCotizacionTransporte(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("CotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("CotizacionID", typeof(int));
            }
            return base.ExecuteFunction<UpdateCotizacionTransporte_Result>("UpdateCotizacionTransporte", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectRiskReportAS_Result> SelectRiskReportAS(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskReportAS_Result>("SelectRiskReportAS", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectAccionUser_Result> SelectAccionUser(Nullable<int> usuarioID)
        {
    
            ObjectParameter usuarioIDParameter;
    
            if (usuarioID.HasValue)
            {
                usuarioIDParameter = new ObjectParameter("UsuarioID", usuarioID);
            }
            else
            {
                usuarioIDParameter = new ObjectParameter("UsuarioID", typeof(int));
            }
            return base.ExecuteFunction<SelectAccionUser_Result>("SelectAccionUser", usuarioIDParameter);
        }
        public virtual ObjectResult<SelectRiskReportRC_Result> SelectRiskReportRC(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskReportRC_Result>("SelectRiskReportRC", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectPresentacionUbicaciones_Result> SelectPresentacionUbicaciones(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectPresentacionUbicaciones_Result>("SelectPresentacionUbicaciones", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectRiskBrowser_Result> SelectRiskBrowser(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectRiskBrowser_Result>("SelectRiskBrowser", cotizacionIDParameter);
        }
        public virtual ObjectResult<SISEAge_Result> SISEAge(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISEAge_Result>("SISEAge", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SISECob_Result> SISECob(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISECob_Result>("SISECob", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SISEInc_Result> SISEInc(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISEInc_Result>("SISEInc", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SISEPol_Result> SISEPol(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISEPol_Result>("SISEPol", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SISETransporte_Result> SISETransporte(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISETransporte_Result>("SISETransporte", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SelectEquipoPresentacion_Result> SelectEquipoPresentacion(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectEquipoPresentacion_Result>("SelectEquipoPresentacion", cotizacionIDParameter);
        }
        public virtual ObjectResult<SISEObs_Result> SISEObs(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISEObs_Result>("SISEObs", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SelectBeneficiario_Result> SelectBeneficiario(Nullable<int> cotizacionID, Nullable<int> ubicacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter ubicacionIDParameter;
    
            if (ubicacionID.HasValue)
            {
                ubicacionIDParameter = new ObjectParameter("ubicacionID", ubicacionID);
            }
            else
            {
                ubicacionIDParameter = new ObjectParameter("ubicacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectBeneficiario_Result>("SelectBeneficiario", cotizacionIDParameter, ubicacionIDParameter);
        }
        public virtual ObjectResult<SISEEquipoDetalle_Result> SISEEquipoDetalle(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISEEquipoDetalle_Result>("SISEEquipoDetalle", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SISEClausula_Result> SISEClausula(Nullable<int> cotizacionID, Nullable<int> id_pv)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
    
            ObjectParameter id_pvParameter;
    
            if (id_pv.HasValue)
            {
                id_pvParameter = new ObjectParameter("id_pv", id_pv);
            }
            else
            {
                id_pvParameter = new ObjectParameter("id_pv", typeof(int));
            }
            return base.ExecuteFunction<SISEClausula_Result>("SISEClausula", cotizacionIDParameter, id_pvParameter);
        }
        public virtual ObjectResult<SelectCotizacionPresentacionRC_Result> SelectCotizacionPresentacionRC(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectCotizacionPresentacionRC_Result>("SelectCotizacionPresentacionRC", cotizacionIDParameter);
        }
        public virtual ObjectResult<SelectTextosPrimaPresentacionRC_Result> SelectTextosPrimaPresentacionRC(Nullable<int> cotizacionID)
        {
    
            ObjectParameter cotizacionIDParameter;
    
            if (cotizacionID.HasValue)
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", cotizacionID);
            }
            else
            {
                cotizacionIDParameter = new ObjectParameter("cotizacionID", typeof(int));
            }
            return base.ExecuteFunction<SelectTextosPrimaPresentacionRC_Result>("SelectTextosPrimaPresentacionRC", cotizacionIDParameter);
        }

        #endregion

    }
    
}
